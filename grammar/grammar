118
BOF
EOF
id
abstract
boolean
break
byte
case
catch
char
class
const
continue
default
do
double
else
extends
final
finally
float
for
goto
if
implements
import
instanceof
int
interface
long
native
new
package
private
protected
public
return
short
static
strictfp
super
switch
synchronized
this
throw
throws
transient
try
void
volatile
while
eq
gt
lt
not
tilde
question
colon
eqeq
lteq
gteq
noteq
ampamp
barbar
plusplus
minusminus
plus
minus
star
slash
amp
bar
carot
pct
ltlt
gtgt
gtgtgt
pluseq
minuseq
stareq
slasheq
ampeq
bareq
caroteq
pcteq
ltlteq
gtgteq
gtgtgteq
oparen
cparen
ocurl
ccurl
osquare
csquare
semi
comma
dot
null-lit
bool-lit
decimal-lit
octal-lit
floating-point-lit
hex-lit
char-lit
string-lit
java-letter
java-digit
digits
float-type-suffix
signed-integer
octal-digit
zero-to-three
escape-sequence
exponent-part
exponent-indicator
string-characters
char-input-chars
string-input-chars
79
Sp
S
JCLASS
DECLS
DECL
TYPE
ARRAY_TYPE
OBJECT
SCOPE
ARGS
ARG_LIST
ARG
LITERAL
CMOD
CONSTRUCTOR
NORMAL_FUNC
FINAL_FUNC
STATIC_FUNC
ABS_FUNC
FUNC_BODY
ABS_BODY
MEMBER_VAR
STATIC_MEMBER_VAR
MEMBER_VAR_DEF
NATIVE_FUNC
NATIVE_BODY
STATIC_NATIVE
STATEMENTS
STATEMENT
BLOCK
BLOCK_BODY
IF
FOR
FOR_PARAMS
FOR_ASSIGN
FOR_CLAUSE
FOR_ITER
WHILE
STATEMENT_BODY
ELSE_CLAUSES
ELSE_IF
ELSE
COND_ARITH_EXP
ARITH_EXP
ARITH_TERM
ARITH_FACTOR
ASSIGNMENT_OP
LOGICAL_OR_OP
LOGICAL_AND_OP
BITWISE_OR_OP
BITWISE_AND_OP
EQUALITY_OP
RELATIONAL_OP
MULT_OP
ADDITIVE_OP
CP5
CP4
CP3
CP2
CP1
CP0
EXPRESSION
VAR_DEFINITION
VAR_ASSIGNMENT
FUNCTION_CALL
FUNCTION_ARGS
FUNC_ARG_LIST
RETURN
CLASS_ADDITION
PACKAGE
PACKAGE_IMPORT
IMPORTS
IMPORT
CALL_CHANG
FUNCTION_CALLS
CLASS_IMPORT
ID_DOT_LIST
FIELD_ACCESS
ID_FUNCTION_DOT_LIST
Sp
148
Sp BOF S EOF
S PACKAGE IMPORTS JCLASS
PACKAGE package OBJECT semi
PACKAGE
IMPORTS IMPORTS IMPORT
IMPORTS
IMPORT import CLASS_IMPORT semi
IMPORT import PACKAGE_IMPORT semi
CLASS_IMPORT CLASS_IMPORT dot id
PACKAGE_IMPORT CLASS_IMPORT dot star
JCLASS public CMOD class id CLASS_ADDITION ocurl DECLS ccurl
CLASS_ADDITION extends id
CLASS_ADDITION implements id
CLASS_ADDITION
DECLS DECLS DECL
DECLS DECL
DECL CONSTRUCTOR
DECL NORMAL_FUNC
DECL FINAL_FUNC
DECL STATIC_FUNC
DECL NATIVE_FUNC
DECL ABS_FUNC
DECL MEMBER_VAR
DECL STATIC_MEMBER_VAR
CONSTRUCTOR SCOPE FUNC_BODY
NORMAL_FUNC SCOPE TYPE FUNC_BODY
FINAL_FUNC SCOPE final TYPE FUNC_BODY
STATIC_FUNC SCOPE static TYPE FUNC_BODY
NATIVE_FUNC SCOPE STATIC_NATIVE int NATIVE_BODY
STATIC_NATIVE static native
ABS_FUNC SCOPE abstract TYPE ABS_BODY
FUNC_BODY id oparen ARGS cparen BLOCK
ABS_BODY id oparen ARGS cparen semi
NATIVE_BODY id oparen int id cparen semi
ARGS ARG_LIST
ARGS
ARG_LIST ARG comma ARG_LIST
ARG_LIST ARG
ARG TYPE id
MEMBER_VAR SCOPE MEMBER_VAR_DEF semi
STATIC_MEMBER_VAR SCOPE static MEMBER_VAR_DEF semi
MEMBER_VAR_DEF TYPE id
MEMBER_VAR_DEF VAR_DEFINITION
VAR_DEFINITION TYPE VAR_ASSIGNMENT
VAR_ASSIGNMENT id eq COND_ARITH_EXP
BLOCK ocurl BLOCK_BODY ccurl
BLOCK_BODY STATEMENTS
BLOCK_BODY
STATEMENTS STATEMENTS STATEMENT
STATEMENTS STATEMENT
STATEMENT VAR_DEFINITION semi
STATEMENT VAR_ASSIGNMENT semi
STATEMENT FUNCTION_CALLS semi
STATEMENT BLOCK
STATEMENT IF
STATEMENT FOR
STATEMENT WHILE
STATEMENT RETURN
IF if oparen COND_ARITH_EXP cparen STATEMENT_BODY ELSE_CLAUSES
ELSE_IF else if oparen COND_ARITH_EXP cparen STATEMENT_BODY
ELSE else STATEMENT_BODY
ELSE_CLAUSES ELSE_IF ELSE_CLAUSES
ELSE_CLAUSES ELSE
ELSE_CLAUSES
FOR for oparen FOR_PARAMS cparen STATEMENT_BODY
FOR_PARAMS FOR_ASSIGN semi FOR_CLAUSE semi FOR_ITER
FOR_ASSIGN VAR_DEFINITION
FOR_ASSIGN VAR_ASSIGNMENT
FOR_ASSIGN
FOR_CLAUSE COND_ARITH_EXP
FOR_CLAUSE
FOR_ITER VAR_ASSIGNMENT
FOR_ITER
STATEMENT_BODY BLOCK
STATEMENT_BODY VAR_ASSIGNMENT semi
STATEMENT_BODY FUNCTION_CALLS semi
WHILE while oparen COND_ARITH_EXP cparen STATEMENT_BODY
RETURN return COND_ARITH_EXP
OBJECT ID_DOT_LIST
OBJECT id
FIELD_ACCESS ID_DOT_LIST
FUNCTION_CALLS ID_FUNCTION_DOT_LIST FUNCTION_CALL
FUNCTION_CALLS FUNCTION_CALL
ID_DOT_LIST ID_FUNCTION_DOT_LIST id
ID_FUNCTION_DOT_LIST ID_FUNCTION_DOT_LIST id dot
ID_FUNCTION_DOT_LIST ID_FUNCTION_DOT_LIST FUNCTION_CALL dot
ID_FUNCTION_DOT_LIST id dot
ID_FUNCTION_DOT_LIST FUNCTION_CALL dot
FUNCTION_CALL id oparen FUNCTION_ARGS cparen
EXPRESSION VAR_DEFINITION semi
EXPRESSION VAR_ASSIGNMENT semi
EXPRESSION FUNCTION_CALLS semi
SCOPE public
SCOPE protected
CMOD final
CMOD static
CMOD abstract
CMOD
TYPE boolean
TYPE int
TYPE char
TYPE byte
TYPE short
TYPE OBJECT
ARRAY_TYPE TYPE osquare csquare
MULT_OP star
MULT_OP slash
MULT_OP pct
ADDITIVE_OP plus
ADDITIVE_OP minus
RELATIONAL_OP lt
RELATIONAL_OP gt
RELATIONAL_OP lteq
RELATIONAL_OP gteq
RELATIONAL_OP instanceof
EQUALITY_OP eqeq
EQUALITY_OP noteq
BITWISE_AND_OP amp
BITWISE_OR_OP bar
LOGICAL_AND_OP ampamp
LOGICAL_OR_OP barbar
ASSIGNMENT_OP eq
ARITH_EXP ARITH_EXP ADDITIVE_OP ARITH_TERM
ARITH_EXP ARITH_TERM
ARITH_TERM ARITH_TERM MULT_OP ARITH_FACTOR
ARITH_TERM ARITH_FACTOR
ARITH_FACTOR oparen COND_ARITH_EXP cparen
ARITH_FACTOR LITERAL
ARITH_FACTOR id
ARITH_FACTOR FIELD_ACCESS
ARITH_FACTOR FUNCTION_CALLS
COND_ARITH_EXP COND_ARITH_EXP LOGICAL_OR_OP CP5
COND_ARITH_EXP CP5
CP5 CP5 LOGICAL_AND_OP CP4
CP5 CP4
CP4 CP4 BITWISE_OR_OP CP3
CP4 CP3
CP3 CP3 BITWISE_AND_OP CP2
CP3 CP2
CP2 CP2 EQUALITY_OP CP1
CP2 CP1
CP1 CP1 not CP0
CP1 CP0
CP0 CP0 RELATIONAL_OP ARITH_EXP
CP0 ARITH_EXP
LITERAL decimal-lit
LITERAL null-lit
LITERAL bool-lit
