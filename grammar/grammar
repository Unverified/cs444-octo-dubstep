107
BOF
EOF
abstract
boolean
break
byte
case
catch
char
class
const
continue
default
do
double
else
extends
final
finally
float
for
goto
if
implements
import
instanceof
int
interface
long
native
new
package
private
protected
public
return
short
static
strictfp
super
switch
synchronized
this
throw
throws
transient
try
void
volatile
while
eq
gt
lt
not
tilde
question
colon
eqeq
lteq
gteq
noteq
ampamp
barbar
plusplus
minusminus
plus
minus
star
slash
amp
bar
carot
pct
ltlt
gtgt
gtgtgt
pluseq
minuseq
stareq
slasheq
ampeq
bareq
caroteq
pcteq
ltlteq
gtgteq
gtgtgteq
oparen
cparen
ocurl
ccurl
osquare
csquare
semi
comma
dot
null-lit
bool-lit
decimal-lit
octal-lit
hex-lit
float-lit
char-lit
string-lit
comment
whitespace
id
108
Sp
S
CLASS
DECLS
DECL
TYPE
ARRAY_TYPE
IDS
SCOPE
ARGS
ARG_TYPE_LIST
ARG
LITERAL
CMOD
CONSTRUCTOR
NORMAL_FUNC
FINAL_FUNC
STATIC_FUNC
ABS_FUNC
FUNC_BODY
ABS_BODY
MEMBER_VAR
STATIC_MEMBER_VAR
MEMBER_VAR_DEF
NATIVE_FUNC
NATIVE_BODY
STATIC_NATIVE
STATEMENTS
STATEMENT
BLOCK
BLOCK_BODY
IF
FOR
FOR_PARAMS
FOR_ASSIGN
FOR_CLAUSE
FOR_ITER
WHILE
STATEMENT_BODY
ELSE_CLAUSES
ELSE_IF
ELSE
COND_ARITH_EXP
ARITH_EXP
ARITH_TERM
ARITH_FACTOR
ARITH_EXP2
ARITH_TERM2
ARITH_FACTOR2
ASSIGNMENT_OP
LOGICAL_OR_OP
LOGICAL_AND_OP
BITWISE_OR_OP
BITWISE_AND_OP
EQUALITY_OP
RELATIONAL_OP
MULT_OP
ADDITIVE_OP
CP5
CP4
CP3
CP2
CP1
CP0
EXPRESSION
VAR_DEFINITION
VAR_ASSIGNMENT
FUNCTION_CALL
FUNCTION_ARGS
FUNC_ARG_TYPE_LIST
RETURN
CLASS_ADDITION
PACKAGE
PACKAGE_IMPORT
IMPORTS
IMPORT
CALL_CHANG
FUNCTION_CALLS
FUNCTION_CALL_EXP
CLASS_IMPORT
FIELD_ACCESS
ID_FUNCTION_DOT_LIST
PRIMITIVE
NEW
ARG_LIST
FUNC_ARG_CALL
FUNC_ARG_DEF
SOMETHING
ARGUMENTS
THIS_ACCESS
NEW_OBJECT
NEW_ARRAY
CAST
ARITH_STATEMENT
CAST_OBJ
CP6
ENCLOSED_IDS
ENCLOSED_PRIMITIVE
CP2b
DECL_NO_BODY
DECLS_NO_BODY
INTERFACE
IMOD
INTERFACE_ADDITION
JCLASS
IMPLEMENTS
CASTS
THROWS
Sp
201
Sp BOF S EOF
S PACKAGE IMPORTS JCLASS
PACKAGE package IDS semi
PACKAGE
IMPORTS IMPORTS IMPORT
IMPORTS
IMPORT import PACKAGE_IMPORT semi
IMPORT import CLASS_IMPORT semi
PACKAGE_IMPORT CLASS_IMPORT dot star
PACKAGE_IMPORT star
CLASS_IMPORT CLASS_IMPORT dot id
CLASS_IMPORT id
JCLASS CLASS
JCLASS INTERFACE
CLASS public CMOD class id CLASS_ADDITION ocurl DECLS ccurl
INTERFACE public IMOD interface id INTERFACE_ADDITION ocurl DECLS_NO_BODY ccurl
DECLS_NO_BODY DECLS_NO_BODY DECL_NO_BODY
DECLS_NO_BODY
DECL_NO_BODY SCOPE TYPE id oparen ARGUMENTS cparen semi
DECL_NO_BODY SCOPE abstract TYPE id oparen ARGUMENTS cparen semi
INTERFACE_ADDITION implements IDS
INTERFACE_ADDITION
CLASS_ADDITION extends IDS
CLASS_ADDITION implements IMPLEMENTS
CLASS_ADDITION
IMPLEMENTS IMPLEMENTS comma IDS
IMPLEMENTS IDS
DECLS DECLS DECL
DECLS DECL
DECL CONSTRUCTOR
DECL NORMAL_FUNC
DECL FINAL_FUNC
DECL STATIC_FUNC
DECL NATIVE_FUNC
DECL ABS_FUNC
DECL MEMBER_VAR
DECL STATIC_MEMBER_VAR
CONSTRUCTOR SCOPE FUNC_BODY
NORMAL_FUNC SCOPE TYPE FUNC_BODY
FINAL_FUNC SCOPE final TYPE FUNC_BODY
STATIC_FUNC SCOPE static TYPE FUNC_BODY
NATIVE_FUNC SCOPE STATIC_NATIVE int NATIVE_BODY
STATIC_NATIVE static native
ABS_FUNC SCOPE abstract TYPE ABS_BODY
FUNC_BODY id oparen ARGUMENTS cparen THROWS BLOCK
ABS_BODY id oparen ARGUMENTS cparen THROWS semi
NATIVE_BODY id oparen int id cparen semi
THROWS throw IDS
THROWS
ARGS ARG_TYPE_LIST
ARGS
ARG_TYPE_LIST ARG comma ARG_TYPE_LIST
ARG_TYPE_LIST ARG
ARG TYPE id
MEMBER_VAR SCOPE MEMBER_VAR_DEF semi
STATIC_MEMBER_VAR SCOPE static MEMBER_VAR_DEF semi
MEMBER_VAR MEMBER_VAR_DEF semi
STATIC_MEMBER_VAR static MEMBER_VAR_DEF semi
MEMBER_VAR_DEF TYPE id
MEMBER_VAR_DEF VAR_DEFINITION
VAR_DEFINITION TYPE VAR_ASSIGNMENT
VAR_ASSIGNMENT id eq COND_ARITH_EXP
VAR_ASSIGNMENT NEW_OBJECT eq COND_ARITH_EXP
BLOCK ocurl BLOCK_BODY ccurl
BLOCK_BODY STATEMENTS
BLOCK_BODY
STATEMENTS STATEMENTS STATEMENT
STATEMENTS STATEMENT
STATEMENT VAR_DEFINITION semi
STATEMENT VAR_ASSIGNMENT semi
STATEMENT FUNCTION_CALL_EXP semi
STATEMENT THIS_ACCESS semi
STATEMENT BLOCK
STATEMENT IF
STATEMENT FOR
STATEMENT WHILE
STATEMENT RETURN
IF if oparen COND_ARITH_EXP cparen STATEMENT_BODY ELSE_CLAUSES
ELSE_IF else if oparen COND_ARITH_EXP cparen STATEMENT_BODY ELSE_CLAUSES
ELSE else STATEMENT_BODY
ELSE_CLAUSES ELSE_IF
ELSE_CLAUSES ELSE
ELSE_CLAUSES
FOR for oparen FOR_PARAMS cparen STATEMENT_BODY
FOR_PARAMS FOR_ASSIGN semi FOR_CLAUSE semi FOR_ITER
FOR_ASSIGN VAR_DEFINITION
FOR_ASSIGN VAR_ASSIGNMENT
FOR_ASSIGN
FOR_CLAUSE COND_ARITH_EXP
FOR_CLAUSE
FOR_ITER VAR_ASSIGNMENT
FOR_ITER
STATEMENT_BODY BLOCK
STATEMENT_BODY VAR_ASSIGNMENT semi
STATEMENT_BODY FUNCTION_CALL_EXP semi
STATEMENT_BODY THIS_ACCESS semi
STATEMENT_BODY RETURN
WHILE while oparen COND_ARITH_EXP cparen STATEMENT_BODY
RETURN return COND_ARITH_EXP semi
RETURN return void semi
RETURN return semi
ARGUMENTS FUNC_ARG_DEF
ARGUMENTS FUNC_ARG_CALL
ARGUMENTS
FUNC_ARG_DEF FUNC_ARG_DEF comma TYPE id
FUNC_ARG_DEF TYPE id
FUNC_ARG_CALL FUNC_ARG_CALL comma COND_ARITH_EXP
FUNC_ARG_CALL COND_ARITH_EXP
FUNCTION_CALL_EXP FUNCTION_CALL_EXP dot FUNCTION_CALLS
FUNCTION_CALL_EXP FUNCTION_CALLS
FUNCTION_CALLS IDS dot FUNCTION_CALL
FUNCTION_CALLS FUNCTION_CALL
FUNCTION_CALL id oparen ARGUMENTS cparen
IDS IDS dot id
IDS id
THIS_ACCESS this dot FUNCTION_CALL_EXP
THIS_ACCESS this dot IDS
THIS_ACCESS this
NEW NEW_ARRAY
NEW NEW_OBJECT
NEW_ARRAY new PRIMITIVE osquare COND_ARITH_EXP csquare
NEW_OBJECT new id oparen ARGUMENTS cparen
NEW_OBJECT new id oparen ARGUMENTS cparen dot IDS
NEW_OBJECT new id oparen ARGUMENTS cparen dot FUNCTION_CALL_EXP
NEW_OBJECT new id oparen ARGUMENTS cparen dot FUNCTION_CALL_EXP dot IDS
CASTS CASTS CAST
CASTS CAST
CAST oparen PRIMITIVE cparen
CAST oparen PRIMITIVE osquare csquare cparen
CAST oparen COND_ARITH_EXP cparen
CAST oparen COND_ARITH_EXP cparen osquare csquare
CAST oparen minus COND_ARITH_EXP cparen
CAST oparen minus COND_ARITH_EXP cparen osquare csquare
SCOPE public
SCOPE protected
CMOD final
CMOD static
CMOD abstract
CMOD
IMOD abstract
IMOD
TYPE PRIMITIVE
TYPE IDS
TYPE ARRAY_TYPE
TYPE void
ARRAY_TYPE PRIMITIVE osquare csquare
MULT_OP star
MULT_OP slash
MULT_OP pct
ADDITIVE_OP plus
ADDITIVE_OP minus
RELATIONAL_OP lt
RELATIONAL_OP gt
RELATIONAL_OP lteq
RELATIONAL_OP gteq
EQUALITY_OP eqeq
EQUALITY_OP noteq
BITWISE_AND_OP amp
BITWISE_OR_OP bar
LOGICAL_AND_OP ampamp
LOGICAL_OR_OP barbar
ASSIGNMENT_OP eq
ARITH_EXP ARITH_EXP ADDITIVE_OP ARITH_TERM
ARITH_EXP ARITH_TERM
ARITH_TERM ARITH_TERM MULT_OP ARITH_FACTOR
ARITH_TERM ARITH_FACTOR
ARITH_FACTOR oparen minus COND_ARITH_EXP cparen
ARITH_FACTOR oparen minus COND_ARITH_EXP cparen osquare COND_ARITH_EXP csquare
ARITH_FACTOR oparen COND_ARITH_EXP cparen
ARITH_FACTOR oparen COND_ARITH_EXP cparen osquare COND_ARITH_EXP csquare
ARITH_FACTOR IDS
ARITH_FACTOR LITERAL
ARITH_FACTOR FUNCTION_CALL_EXP
ARITH_FACTOR THIS_ACCESS
ARITH_FACTOR NEW
COND_ARITH_EXP CASTS CP6
COND_ARITH_EXP CP6
CP6 CP6 LOGICAL_OR_OP CP5
CP6 CP5
CP5 CP5 LOGICAL_AND_OP CP4
CP5 CP4
CP4 CP4 BITWISE_OR_OP CP3
CP4 CP3
CP3 CP3 BITWISE_AND_OP CP2
CP3 CP2
CP2 CP2 EQUALITY_OP CP2b
CP2 CP2b
CP2b CP2b instanceof TYPE
CP2b CP1
CP1 CP1 RELATIONAL_OP CP0
CP1 CP0
CP0 not ARITH_EXP
CP0 ARITH_EXP
LITERAL decimal-lit
LITERAL null-lit
LITERAL bool-lit
PRIMITIVE boolean
PRIMITIVE int
PRIMITIVE char
PRIMITIVE byte
PRIMITIVE short
