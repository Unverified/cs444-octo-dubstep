#s((vdecl ast 1) () () () #s(rtype (CompB)) #s((varassign ast 1) () x #s((classcreate ast 1) () (CompC) ())))
============= AST ==============
c-unit
  ()
  class public empty Main empty empty
  block g149
    constructor public (methoddecl Main)
      block g150
    method public (static) (ptype int) (methoddecl test)
      block g151
        (varassign (vdecl empty empty (rtype (CompB)) x) (classcreate (rtype (CompC)))
        block g152
          (return (methodcall (ambiguous (x)) compareTo(#s((cast ast 1) () #s(rtype (Object)) #s((literal ast 1) () #s(ptype null) null)))))============= AST ==============
c-unit
  ()
  class public empty CompA empty empty
  block g153
    constructor public (methoddecl CompA)
      block g154============= AST ==============
c-unit
  ()
  class public abstract CompB (CompA) ((Comparable))
  block g155
    constructor public (methoddecl CompB)
      block g156============= AST ==============
c-unit
  ()
  class public empty CompC (CompB) empty
  block g157
    constructor public (methoddecl CompC)
      block g158
    method public empty (ptype int) (methoddecl compareTo (parameter (rtype (Object)) o))
      block g159
        (return (literal (ptype int) 123))============= AST ==============
c-unit
  (java lang)
  interface public empty Comparable empty
  block g160
    method public (abstract) (ptype int) (methoddecl compareTo (parameter (rtype (Object)) o))
      block g161
============== PRINTING ASTS ==============

================ AST ================
c-unit
  ()
  (pimport (java lang))
  class public empty Main empty empty
  block g149
    constructor public (methoddecl Main)
      block g150
    method public (static) (ptype int) (methoddecl test)
      block g151
        (varassign (vdecl empty empty (rtype (CompB)) x) (classcreate (rtype (CompC)))
        block g152
          (return (methodcall (ambiguous (x)) compareTo(#s((cast ast 1) () #s(rtype (Object)) #s((literal ast 1) () #s(ptype null) null)))))
================ AST ================
c-unit
  ()
  (pimport (java lang))
  class public empty CompA empty empty
  block g153
    constructor public (methoddecl CompA)
      block g154
================ AST ================
c-unit
  ()
  (pimport (java lang))
  class public abstract CompB (CompA) ((Comparable))
  block g155
    constructor public (methoddecl CompB)
      block g156
================ AST ================
c-unit
  ()
  (pimport (java lang))
  class public empty CompC (CompB) empty
  block g157
    constructor public (methoddecl CompC)
      block g158
    method public empty (ptype int) (methoddecl compareTo (parameter (rtype (Object)) o))
      block g159
        (return (literal (ptype int) 123))
================ AST ================
c-unit
  (java lang)
  (pimport (java lang))
  interface public empty Comparable empty
  block g160
    method public (abstract) (ptype int) (methoddecl compareTo (parameter (rtype (Object)) o))
      block g161
================ AST ================
c-unit
  (java io)
  (pimport (java lang))
  class public empty OutputStream empty empty
  block g220
    constructor public (methoddecl OutputStream)
      block g221
    method public empty (ptype void) (methoddecl write (parameter (ptype char) c))
      block g222
        (methodcall (this empty) write(#s((cast ast 1) () #s(ptype int) #s((varuse ast 1) () c))))
    method public empty (ptype void) (methoddecl write (parameter (ptype int) b))
      block g223
        (methodcall (ambiguous (PrintStream)) nativeWrite(#s((varuse ast 1) () b)))
    method protected (static native) (ptype int) (methoddecl nativeWrite (parameter (ptype int) b))
      block g225
    method public empty (ptype void) (methoddecl flush)
      block g224
================ AST ================
c-unit
  (java io)
  (pimport (java lang))
  class public empty PrintStream (OutputStream) empty
  block g226
    constructor public (methoddecl PrintStream)
      block g227
    method public empty (ptype void) (methoddecl print (parameter (rtype (String)) s))
      block g228
        for (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0) (binop lt (varuse i) (methodcall (ambiguous (s)) lengthempty)) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
          block g229
            (methodcall (this empty) write(#s((methodcall ast 1) () #s((ambiguous ast 1) () (s)) charAt (#s((varuse ast 1) () i)))))
    method public empty (ptype void) (methoddecl println)
      block g230
        (methodcall (this empty) println(#s((literal ast 1) () #s(rtype (java lang String)) )))
    method public empty (ptype void) (methoddecl println (parameter (rtype (String)) s))
      block g231
        (methodcall (this empty) print(#s((varuse ast 1) () s)))
        (methodcall (this empty) write(#s((literal ast 1) () #s(ptype char) 10)))
    method public empty (ptype void) (methoddecl println (parameter (rtype (Object)) b))
      block g232
        (methodcall (this empty) println(#s((methodcall ast 1) () #s((ambiguous ast 1) () (String)) valueOf (#s((varuse ast 1) () b)))))
    method public empty (ptype void) (methoddecl println (parameter (ptype boolean) b))
      block g233
        (methodcall (this empty) println(#s((methodcall ast 1) () #s((ambiguous ast 1) () (String)) valueOf (#s((varuse ast 1) () b)))))
    method public empty (ptype void) (methoddecl println (parameter (ptype byte) b))
      block g234
        (methodcall (this empty) println(#s((methodcall ast 1) () #s((ambiguous ast 1) () (String)) valueOf (#s((varuse ast 1) () b)))))
    method public empty (ptype void) (methoddecl println (parameter (ptype char) b))
      block g235
        (methodcall (this empty) println(#s((methodcall ast 1) () #s((ambiguous ast 1) () (String)) valueOf (#s((varuse ast 1) () b)))))
    method public empty (ptype void) (methoddecl println (parameter (ptype short) b))
      block g236
        (methodcall (this empty) println(#s((methodcall ast 1) () #s((ambiguous ast 1) () (String)) valueOf (#s((varuse ast 1) () b)))))
    method public empty (ptype void) (methoddecl println (parameter (ptype int) b))
      block g237
        (methodcall (this empty) println(#s((methodcall ast 1) () #s((ambiguous ast 1) () (String)) valueOf (#s((varuse ast 1) () b)))))
    method public empty (ptype void) (methoddecl print (parameter (rtype (Object)) b))
      block g238
        (methodcall (this empty) print(#s((methodcall ast 1) () #s((ambiguous ast 1) () (String)) valueOf (#s((varuse ast 1) () b)))))
    method public empty (ptype void) (methoddecl print (parameter (ptype boolean) b))
      block g239
        (methodcall (this empty) print(#s((methodcall ast 1) () #s((ambiguous ast 1) () (String)) valueOf (#s((varuse ast 1) () b)))))
    method public empty (ptype void) (methoddecl print (parameter (ptype byte) b))
      block g240
        (methodcall (this empty) print(#s((methodcall ast 1) () #s((ambiguous ast 1) () (String)) valueOf (#s((varuse ast 1) () b)))))
    method public empty (ptype void) (methoddecl print (parameter (ptype char) b))
      block g241
        (methodcall (this empty) print(#s((methodcall ast 1) () #s((ambiguous ast 1) () (String)) valueOf (#s((varuse ast 1) () b)))))
    method public empty (ptype void) (methoddecl print (parameter (ptype short) b))
      block g242
        (methodcall (this empty) print(#s((methodcall ast 1) () #s((ambiguous ast 1) () (String)) valueOf (#s((varuse ast 1) () b)))))
    method public empty (ptype void) (methoddecl print (parameter (ptype int) b))
      block g243
        (methodcall (this empty) print(#s((methodcall ast 1) () #s((ambiguous ast 1) () (String)) valueOf (#s((varuse ast 1) () b)))))
================ AST ================
c-unit
  (java io)
  (pimport (java lang))
  interface public empty Serializable empty
  block g244
================ AST ================
c-unit
  (java lang)
  (pimport (java lang))
  class public final Boolean empty empty
  block g245
    (vdecl public empty (ptype boolean) value)
    constructor public (methoddecl Boolean (parameter (ptype boolean) i))
      block g246
        (varassign (varuse value) (varuse i)
    constructor public (methoddecl Boolean)
      block g247
    method public empty (rtype (String)) (methoddecl toString)
      block g248
        (return (methodcall (ambiguous (String)) valueOf(#s((varuse ast 1) () value))))
    (varassign (vdecl public static (ptype byte) MAX_VALUE) (cast (ptype byte) (literal (ptype int) 127))
================ AST ================
c-unit
  (java lang)
  (pimport (java lang))
  class public final Byte empty empty
  block g249
    (vdecl public empty (ptype byte) value)
    constructor public (methoddecl Byte (parameter (ptype byte) i))
      block g250
        (varassign (varuse value) (varuse i)
    constructor public (methoddecl Byte)
      block g251
    method public empty (rtype (String)) (methoddecl toString)
      block g252
        (return (methodcall (ambiguous (String)) valueOf(#s((varuse ast 1) () value))))
    (varassign (vdecl public static (ptype byte) MAX_VALUE) (cast (ptype byte) (literal (ptype int) 127))
================ AST ================
c-unit
  (java lang)
  (pimport (java lang))
  class public final Character empty empty
  block g253
    (vdecl public empty (ptype char) value)
    constructor public (methoddecl Character (parameter (ptype char) i))
      block g254
        (varassign (varuse value) (varuse i)
    constructor public (methoddecl Character)
      block g255
    method public empty (rtype (String)) (methoddecl toString)
      block g256
        (return (methodcall (ambiguous (String)) valueOf(#s((varuse ast 1) () value))))
================ AST ================
c-unit
  (java lang)
  (pimport (java lang))
  class public empty Class empty empty
  block g257
    constructor public (methoddecl Class)
      block g258
================ AST ================
c-unit
  (java lang)
  (pimport (java lang))
  interface public empty Cloneable empty
  block g259
================ AST ================
c-unit
  (java lang)
  (pimport (java lang))
  class public final Integer (Number) empty
  block g260
    (vdecl public empty (ptype int) value)
    constructor public (methoddecl Integer (parameter (ptype int) i))
      block g261
        (varassign (varuse value) (varuse i)
    method public empty (ptype int) (methoddecl intValue)
      block g262
        (return (varuse value))
    method public (static) (ptype int) (methoddecl parseInt (parameter (rtype (String)) s))
      block g263
        (varassign (vdecl empty empty (ptype int) ret) (literal (ptype int) 0)
        block g266
          (varassign (vdecl empty empty (ptype boolean) neg) (literal (ptype boolean) #f)
          block g267
            (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0)
            block g268
              while (binop ampamp (binop lt (varuse i) (methodcall (ambiguous (s)) lengthempty)) (binop barbar (binop eqeq (methodcall (ambiguous (s)) charAt(#s((varuse ast 1) () i))) (literal (ptype char) 45)) (binop ampamp (binop gteq (methodcall (ambiguous (s)) charAt(#s((varuse ast 1) () i))) (literal (ptype char) 48)) (binop lteq (methodcall (ambiguous (s)) charAt(#s((varuse ast 1) () i))) (literal (ptype char) 57)))))
                block g264
                  iff (binop eqeq (methodcall (ambiguous (s)) charAt(#s((varuse ast 1) () i))) (literal (ptype char) 45)) (varassign (varuse neg) (unop not (varuse neg))block g265
                      (varassign (varuse ret) (binop minus (binop plus (binop star (varuse ret) (literal (ptype int) 10)) (methodcall (ambiguous (s)) charAt(#s((varuse ast 1) () i)))) (literal (ptype char) 48))
                  (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
              iff (varuse neg) (varassign (varuse ret) (unop minus (varuse ret))empty
              (return (varuse ret))
    constructor public (methoddecl Integer (parameter (rtype (String)) s))
      block g269
        (varassign (varuse value) (methodcall (ambiguous (Integer)) parseInt(#s((varuse ast 1) () s)))
    constructor public (methoddecl Integer)
      block g270
        (varassign (varuse value) (literal (ptype int) 0)
    method public empty (rtype (String)) (methoddecl toString)
      block g271
        (return (methodcall (ambiguous (String)) valueOf(#s((varuse ast 1) () value))))
    (varassign (vdecl public static (ptype int) MAX_VALUE) (literal (ptype int) 2147483647)
================ AST ================
c-unit
  (java lang)
  (pimport (java lang))
  class public abstract Number empty empty
  block g272
    method public (abstract) (ptype int) (methoddecl intValue)
      block g274
    constructor public (methoddecl Number)
      block g273
================ AST ================
c-unit
  (java lang)
  (pimport (java lang))
  class public empty Object empty empty
  block g275
    constructor public (methoddecl Object)
      block g276
    method public empty (ptype boolean) (methoddecl equals (parameter (rtype (Object)) other))
      block g277
        (return (binop eqeq (this empty) (varuse other)))
    method public empty (rtype (String)) (methoddecl toString)
      block g278
        (return (literal (rtype (java lang String)) Some random object))
    method public empty (ptype int) (methoddecl hashCode)
      block g279
        (return (literal (ptype int) 42))
    method protected empty (rtype (Object)) (methoddecl clone)
      block g280
        (return (this empty))
    method public (final) (rtype (Class)) (methoddecl getClass)
      block g281
        (return (literal (ptype null) null))
================ AST ================
c-unit
  (java lang)
  (pimport (java lang))
  class public final Short (Number) empty
  block g282
    (vdecl public empty (ptype short) value)
    constructor public (methoddecl Short (parameter (ptype short) i))
      block g283
        (varassign (varuse value) (varuse i)
    method public empty (ptype int) (methoddecl intValue)
      block g284
        (return (cast (ptype int) (varuse value)))
    constructor public (methoddecl Short)
      block g285
    method public empty (rtype (String)) (methoddecl toString)
      block g286
        (return (methodcall (ambiguous (String)) valueOf(#s((varuse ast 1) () value))))
================ AST ================
c-unit
  (java lang)
  (pimport (java lang))
  (cimport (java util Arrays))
  class public empty String empty empty
  block g287
    (vdecl public empty (atype (ptype char)) chars)
    method public empty (ptype int) (methoddecl length)
      block g288
        (return (ambiguous (chars length)))
    method public empty (ptype char) (methoddecl charAt (parameter (ptype int) i))
      block g289
        (return (arrayaccess (varuse chars) (varuse i)))
    constructor public (methoddecl String)
      block g290
        (varassign (varuse chars) (arraycreate (ptype char) (literal (ptype int) 0))
    constructor public (methoddecl String (parameter (atype (ptype char)) chars))
      block g291
        (varassign (fieldaccess (this empty) chars) (arraycreate (ptype char) (ambiguous (chars length)))
        for (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0) (binop lt (varuse i) (ambiguous (chars length))) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
          block g292
            (varassign (arrayaccess (fieldaccess (this empty) chars) (varuse i)) (arrayaccess (varuse chars) (varuse i))
    constructor public (methoddecl String (parameter (rtype (String)) other))
      block g293
        (varassign (fieldaccess (this empty) chars) (ambiguous (other chars))
    method public empty (rtype (String)) (methoddecl concat (parameter (rtype (String)) s2))
      block g294
        (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0)
        block g297
          (varassign (vdecl empty empty (atype (ptype char)) newchars) (arraycreate (ptype char) (binop plus (methodcall (this empty) lengthempty) (methodcall (ambiguous (s2)) lengthempty)))
          block g298
            for (varassign (varuse i) (literal (ptype int) 0) (binop lt (varuse i) (methodcall (this empty) lengthempty)) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
              block g295
                (varassign (arrayaccess (varuse newchars) (varuse i)) (arrayaccess (varuse chars) (varuse i))
            for (varassign (varuse i) (literal (ptype int) 0) (binop lt (varuse i) (methodcall (ambiguous (s2)) lengthempty)) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
              block g296
                (varassign (arrayaccess (varuse newchars) (binop plus (varuse i) (methodcall (this empty) lengthempty))) (arrayaccess (ambiguous (s2 chars)) (varuse i))
            (return (classcreate (rtype (String)) (varuse newchars)))
    method public (static) (rtype (String)) (methoddecl valueOf (parameter (ptype char) c))
      block g299
        (varassign (vdecl empty empty (atype (ptype char)) newchars) (arraycreate (ptype char) (literal (ptype int) 1))
        block g300
          (varassign (arrayaccess (varuse newchars) (literal (ptype int) 0)) (varuse c)
          (return (classcreate (rtype (String)) (varuse newchars)))
    method public (static) (rtype (String)) (methoddecl valueOf (parameter (ptype int) i))
      block g301
        (varassign (vdecl empty empty (atype (ptype char)) ret) (arraycreate (ptype char) (literal (ptype int) 15))
        block g309
          (varassign (vdecl empty empty (ptype int) j) (literal (ptype int) 0)
          block g310
            (varassign (vdecl empty empty (ptype boolean) wasneg) (literal (ptype boolean) #f)
            block g311
              iff (binop eqeq (varuse i) (unop minus (literal (ptype int) 2147483648))) (return (literal (rtype (java lang String)) -2147483648))empty
              iff (binop lt (varuse i) (literal (ptype int) 0)) block g302
                  (varassign (varuse wasneg) (literal (ptype boolean) #t)
                  (varassign (varuse i) (unop minus (varuse i))empty
              iff (binop eqeq (varuse i) (literal (ptype int) 0)) block g303
                  (varassign (arrayaccess (varuse ret) (varuse j)) (literal (ptype char) 48)
                  (varassign (varuse j) (binop plus (varuse j) (literal (ptype int) 1))block g304
                  while (binop gt (varuse i) (literal (ptype int) 0))
                    block g305
                      (varassign (vdecl empty empty (ptype int) d) (binop pct (varuse i) (literal (ptype int) 10))
                      block g306
                        (varassign (varuse i) (binop slash (varuse i) (literal (ptype int) 10))
                        (varassign (arrayaccess (varuse ret) (varuse j)) (cast (ptype char) (binop plus (varuse d) (literal (ptype char) 48)))
                        (varassign (varuse j) (binop plus (varuse j) (literal (ptype int) 1))
              iff (varuse wasneg) block g307
                  (varassign (arrayaccess (varuse ret) (varuse j)) (literal (ptype char) 45)
                  (varassign (varuse j) (binop plus (varuse j) (literal (ptype int) 1))empty
              (varassign (vdecl empty empty (atype (ptype char)) ret2) (arraycreate (ptype char) (varuse j))
              block g312
                for (varassign (varuse i) (literal (ptype int) 0) (binop lt (varuse i) (varuse j)) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
                  block g308
                    (varassign (arrayaccess (varuse ret2) (varuse i)) (arrayaccess (varuse ret) (binop minus (binop minus (varuse j) (literal (ptype int) 1)) (varuse i)))
                (return (classcreate (rtype (String)) (varuse ret2)))
    method public (static) (rtype (String)) (methoddecl valueOf (parameter (ptype short) i))
      block g313
        (return (methodcall (ambiguous (String)) valueOf(#s((cast ast 1) () #s(ptype int) #s((varuse ast 1) () i)))))
    method public (static) (rtype (String)) (methoddecl valueOf (parameter (ptype byte) i))
      block g314
        (return (methodcall (ambiguous (String)) valueOf(#s((cast ast 1) () #s(ptype int) #s((varuse ast 1) () i)))))
    method public (static) (rtype (String)) (methoddecl valueOf (parameter (ptype boolean) b))
      block g315
        iff (varuse b) (return (literal (rtype (java lang String)) true))(return (literal (rtype (java lang String)) false))
    method public (static) (rtype (String)) (methoddecl valueOf (parameter (rtype (Object)) o))
      block g316
        iff (binop eqeq (varuse o) (literal (ptype null) null)) (return (literal (rtype (java lang String)) null))(return (methodcall (ambiguous (o)) toStringempty))
    method public (static) (rtype (String)) (methoddecl valueOf (parameter (rtype (String)) o))
      block g317
        iff (binop eqeq (varuse o) (literal (ptype null) null)) (return (literal (rtype (java lang String)) null))(return (varuse o))
    method public empty (ptype boolean) (methoddecl equals (parameter (rtype (Object)) o))
      block g318
        iff (binop eqeq (varuse o) (literal (ptype null) null)) (return (literal (ptype boolean) #f))empty
        iff (unop not (binop instanceof (varuse o) (rtype (String)))) (return (literal (ptype boolean) #f))empty
        (return (methodcall (ambiguous (Arrays)) equals(#s((varuse ast 1) () chars) #s((fieldaccess ast 1) () #s((cast ast 1) () #s(rtype (String)) #s((varuse ast 1) () o)) chars))))
    method public empty (rtype (String)) (methoddecl substring (parameter (ptype int) i) (parameter (ptype int) j))
      block g319
        (varassign (vdecl empty empty (ptype int) k) (literal (ptype int) 0)
        block g321
          iff (binop lt (varuse i) (literal (ptype int) 0)) (return (literal (rtype (java lang String)) ))empty
          iff (binop gt (varuse j) (methodcall (this empty) lengthempty)) (return (literal (rtype (java lang String)) ))empty
          iff (binop lt (varuse j) (varuse i)) (return (literal (rtype (java lang String)) ))empty
          (varassign (vdecl empty empty (atype (ptype char)) ret) (arraycreate (ptype char) (binop minus (varuse j) (varuse i)))
          block g322
            for (varassign (varuse k) (varuse i) (binop lt (varuse k) (varuse j)) (varassign (varuse k) (binop plus (varuse k) (literal (ptype int) 1))
              block g320
                (varassign (arrayaccess (varuse ret) (binop minus (varuse k) (varuse i))) (methodcall (this empty) charAt(#s((varuse ast 1) () k)))
            (return (classcreate (rtype (String)) (varuse ret)))
    method public empty (rtype (String)) (methoddecl trim)
      block g323
        (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0)
        block g326
          (varassign (vdecl empty empty (ptype int) j) (literal (ptype int) 0)
          block g327
            for (varassign (varuse i) (literal (ptype int) 0) (binop ampamp (binop lt (varuse i) (methodcall (this empty) lengthempty)) (binop lteq (methodcall (this empty) charAt(#s((varuse ast 1) () i))) (literal (ptype char) 32))) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
              block g324
            for (varassign (varuse j) (binop minus (methodcall (this empty) lengthempty) (literal (ptype int) 1)) (binop ampamp (binop gteq (varuse j) (literal (ptype int) 0)) (binop lteq (methodcall (this empty) charAt(#s((varuse ast 1) () j))) (literal (ptype char) 32))) (varassign (varuse j) (binop minus (varuse j) (literal (ptype int) 1))
              block g325
            iff (binop gt (varuse i) (varuse j)) (return (literal (rtype (java lang String)) ))(return (methodcall (this empty) substring(#s((varuse ast 1) () i) #s((binop ast 1) () plus #s((varuse ast 1) () j) #s((literal ast 1) () #s(ptype int) 1)))))
    method public empty (ptype int) (methoddecl hashCode)
      block g328
        (varassign (vdecl empty empty (ptype int) h) (literal (ptype int) 0)
        block g330
          for (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0) (binop lt (varuse i) (ambiguous (chars length))) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
            block g329
              (varassign (varuse h) (binop plus (binop star (literal (ptype int) 31) (varuse h)) (arrayaccess (varuse chars) (varuse i)))
          (return (varuse h))
    method public empty (rtype (String)) (methoddecl toString)
      block g331
        (return (this empty))
    method public empty (ptype int) (methoddecl compareTo (parameter (rtype (Object)) other))
      block g332
        (return (methodcall (this empty) compareTo(#s((cast ast 1) () #s(rtype (String)) #s((varuse ast 1) () other)))))
    method public empty (ptype int) (methoddecl compareTo (parameter (rtype (String)) other))
      block g333
        (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0)
        block g335
          (varassign (vdecl empty empty (ptype boolean) b) (literal (ptype boolean) #t)
          block g336
            while (varuse b)
              block g334
                iff (binop ampamp (binop gteq (varuse i) (ambiguous (chars length))) (binop gteq (varuse i) (ambiguous (other chars length)))) (return (literal (ptype int) 0))empty
                iff (binop gteq (varuse i) (ambiguous (chars length))) (return (unop minus (literal (ptype int) 1)))empty
                iff (binop gteq (varuse i) (ambiguous (other chars length))) (return (literal (ptype int) 1))empty
                iff (binop lt (arrayaccess (varuse chars) (varuse i)) (arrayaccess (ambiguous (other chars)) (varuse i))) (return (unop minus (literal (ptype int) 1)))empty
                iff (binop gt (arrayaccess (varuse chars) (varuse i)) (arrayaccess (ambiguous (other chars)) (varuse i))) (return (literal (ptype int) 1))empty
                (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
            (return (literal (ptype int) 0))
    method public empty (atype (ptype char)) (methoddecl toCharArray)
      block g337
        (varassign (vdecl empty empty (atype (ptype char)) ret) (arraycreate (ptype char) (ambiguous (chars length)))
        block g339
          for (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0) (binop lt (varuse i) (ambiguous (ret length))) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
            block g338
              (varassign (arrayaccess (varuse ret) (varuse i)) (arrayaccess (varuse chars) (varuse i))
          (return (varuse ret))
    method public empty (ptype int) (methoddecl indexOf (parameter (rtype (String)) needle))
      block g340
        (varassign (vdecl empty empty (ptype int) offset) (literal (ptype int) 0)
        block g344
          (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0)
          block g345
            for (varassign (varuse offset) (literal (ptype int) 0) (binop lt (varuse offset) (methodcall (this empty) lengthempty)) (varassign (varuse offset) (binop plus (varuse offset) (literal (ptype int) 1))
              block g341
                (varassign (vdecl empty empty (ptype boolean) found) (literal (ptype boolean) #t)
                block g343
                  for (varassign (varuse i) (literal (ptype int) 0) (binop lt (varuse i) (methodcall (ambiguous (needle)) lengthempty)) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
                    block g342
                      iff (binop gteq (binop plus (varuse i) (varuse offset)) (methodcall (this empty) lengthempty)) (varassign (varuse found) (literal (ptype boolean) #f)iff (binop noteq (arrayaccess (varuse chars) (binop plus (varuse i) (varuse offset))) (arrayaccess (ambiguous (needle chars)) (varuse i))) (varassign (varuse found) (literal (ptype boolean) #f)empty
                  iff (varuse found) (return (varuse offset))empty
            (return (unop minus (literal (ptype int) 1)))
================ AST ================
c-unit
  (java lang)
  (pimport (java lang))
  (cimport (java io PrintStream))
  class public empty System empty empty
  block g346
    (varassign (vdecl public static (rtype (PrintStream)) out) (classcreate (rtype (PrintStream)))
    method public (static) (ptype void) (methoddecl gc)
      block g347
    constructor public (methoddecl System)
      block g348
================ AST ================
c-unit
  (java util)
  (pimport (java lang))
  class public empty Arrays empty empty
  block g349
    constructor public (methoddecl Arrays)
      block g350
    method public (static) (ptype boolean) (methoddecl equals (parameter (atype (ptype boolean)) a1) (parameter (atype (ptype boolean)) a2))
      block g351
        iff (binop noteq (ambiguous (a1 length)) (ambiguous (a2 length))) (return (literal (ptype boolean) #f))empty
        for (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0) (binop lt (varuse i) (ambiguous (a1 length))) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
          block g352
            iff (binop noteq (arrayaccess (varuse a1) (varuse i)) (arrayaccess (varuse a2) (varuse i))) (return (literal (ptype boolean) #f))empty
        (return (literal (ptype boolean) #t))
    method public (static) (ptype boolean) (methoddecl equals (parameter (atype (ptype char)) a1) (parameter (atype (ptype char)) a2))
      block g353
        iff (binop noteq (ambiguous (a1 length)) (ambiguous (a2 length))) (return (literal (ptype boolean) #f))empty
        for (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0) (binop lt (varuse i) (ambiguous (a1 length))) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
          block g354
            iff (binop noteq (arrayaccess (varuse a1) (varuse i)) (arrayaccess (varuse a2) (varuse i))) (return (literal (ptype boolean) #f))empty
        (return (literal (ptype boolean) #t))
============== Type Linker ==============
############ LINKING NAMES IN CLASS: (Main) ############
Looking for (CompB) in (((Main) #<procedure:const>) ((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (CompC) in (((Main) #<procedure:const>) ((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (Object) in (((Main) #<procedure:const>) ((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
############ LINKING NAMES IN CLASS: (CompA) ############
############ LINKING NAMES IN CLASS: (CompB) ############
Looking for (CompA) in (((CompB) #<procedure:const>) ((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (Comparable) in (((CompB) #<procedure:const>) ((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
############ LINKING NAMES IN CLASS: (CompC) ############
Looking for (CompB) in (((CompC) #<procedure:const>) ((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (Object) in (((CompC) #<procedure:const>) ((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
############ LINKING NAMES IN CLASS: (java lang Comparable) ############
Looking for (Object) in (((Comparable) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
############ LINKING NAMES IN CLASS: (java io OutputStream) ############
############ LINKING NAMES IN CLASS: (java io PrintStream) ############
Looking for (OutputStream) in (((PrintStream) #<procedure:const>) ((OutputStream) #<procedure:const>) ((PrintStream) #<procedure:const>) ((Serializable) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((PrintStream) #<procedure:const>) ((OutputStream) #<procedure:const>) ((PrintStream) #<procedure:const>) ((Serializable) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (java lang String) in (((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((java lang Comparable) #<procedure:const>) ((java io OutputStream) #<procedure:const>) ((java io PrintStream) #<procedure:const>) ((java io Serializable) #<procedure:const>) ((java lang Boolean) #<procedure:const>) ((java lang Byte) #<procedure:const>) ((java lang Character) #<procedure:const>) ((java lang Class) #<procedure:const>) ((java lang Cloneable) #<procedure:const>) ((java lang Integer) #<procedure:const>) ((java lang Number) #<procedure:const>) ((java lang Object) #<procedure:const>) ((java lang Short) #<procedure:const>) ((java lang String) #<procedure:const>) ((java lang System) #<procedure:const>) ((java util Arrays) #<procedure:const>))
Looking for (String) in (((PrintStream) #<procedure:const>) ((OutputStream) #<procedure:const>) ((PrintStream) #<procedure:const>) ((Serializable) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (Object) in (((PrintStream) #<procedure:const>) ((OutputStream) #<procedure:const>) ((PrintStream) #<procedure:const>) ((Serializable) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (Object) in (((PrintStream) #<procedure:const>) ((OutputStream) #<procedure:const>) ((PrintStream) #<procedure:const>) ((Serializable) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
############ LINKING NAMES IN CLASS: (java io Serializable) ############
############ LINKING NAMES IN CLASS: (java lang Boolean) ############
Looking for (String) in (((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
############ LINKING NAMES IN CLASS: (java lang Byte) ############
Looking for (String) in (((Byte) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
############ LINKING NAMES IN CLASS: (java lang Character) ############
Looking for (String) in (((Character) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
############ LINKING NAMES IN CLASS: (java lang Class) ############
############ LINKING NAMES IN CLASS: (java lang Cloneable) ############
############ LINKING NAMES IN CLASS: (java lang Integer) ############
Looking for (Number) in (((Integer) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((Integer) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((Integer) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((Integer) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
############ LINKING NAMES IN CLASS: (java lang Number) ############
############ LINKING NAMES IN CLASS: (java lang Object) ############
Looking for (Object) in (((Object) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((Object) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (java lang String) in (((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((java lang Comparable) #<procedure:const>) ((java io OutputStream) #<procedure:const>) ((java io PrintStream) #<procedure:const>) ((java io Serializable) #<procedure:const>) ((java lang Boolean) #<procedure:const>) ((java lang Byte) #<procedure:const>) ((java lang Character) #<procedure:const>) ((java lang Class) #<procedure:const>) ((java lang Cloneable) #<procedure:const>) ((java lang Integer) #<procedure:const>) ((java lang Number) #<procedure:const>) ((java lang Object) #<procedure:const>) ((java lang Short) #<procedure:const>) ((java lang String) #<procedure:const>) ((java lang System) #<procedure:const>) ((java util Arrays) #<procedure:const>))
Looking for (Object) in (((Object) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (Class) in (((Object) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
############ LINKING NAMES IN CLASS: (java lang Short) ############
Looking for (Number) in (((Short) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((Short) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
############ LINKING NAMES IN CLASS: (java lang String) ############
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (java lang String) in (((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((java lang Comparable) #<procedure:const>) ((java io OutputStream) #<procedure:const>) ((java io PrintStream) #<procedure:const>) ((java io Serializable) #<procedure:const>) ((java lang Boolean) #<procedure:const>) ((java lang Byte) #<procedure:const>) ((java lang Character) #<procedure:const>) ((java lang Class) #<procedure:const>) ((java lang Cloneable) #<procedure:const>) ((java lang Integer) #<procedure:const>) ((java lang Number) #<procedure:const>) ((java lang Object) #<procedure:const>) ((java lang Short) #<procedure:const>) ((java lang String) #<procedure:const>) ((java lang System) #<procedure:const>) ((java util Arrays) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (java lang String) in (((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((java lang Comparable) #<procedure:const>) ((java io OutputStream) #<procedure:const>) ((java io PrintStream) #<procedure:const>) ((java io Serializable) #<procedure:const>) ((java lang Boolean) #<procedure:const>) ((java lang Byte) #<procedure:const>) ((java lang Character) #<procedure:const>) ((java lang Class) #<procedure:const>) ((java lang Cloneable) #<procedure:const>) ((java lang Integer) #<procedure:const>) ((java lang Number) #<procedure:const>) ((java lang Object) #<procedure:const>) ((java lang Short) #<procedure:const>) ((java lang String) #<procedure:const>) ((java lang System) #<procedure:const>) ((java util Arrays) #<procedure:const>))
Looking for (java lang String) in (((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((java lang Comparable) #<procedure:const>) ((java io OutputStream) #<procedure:const>) ((java io PrintStream) #<procedure:const>) ((java io Serializable) #<procedure:const>) ((java lang Boolean) #<procedure:const>) ((java lang Byte) #<procedure:const>) ((java lang Character) #<procedure:const>) ((java lang Class) #<procedure:const>) ((java lang Cloneable) #<procedure:const>) ((java lang Integer) #<procedure:const>) ((java lang Number) #<procedure:const>) ((java lang Object) #<procedure:const>) ((java lang Short) #<procedure:const>) ((java lang String) #<procedure:const>) ((java lang System) #<procedure:const>) ((java util Arrays) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (Object) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (java lang String) in (((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((java lang Comparable) #<procedure:const>) ((java io OutputStream) #<procedure:const>) ((java io PrintStream) #<procedure:const>) ((java io Serializable) #<procedure:const>) ((java lang Boolean) #<procedure:const>) ((java lang Byte) #<procedure:const>) ((java lang Character) #<procedure:const>) ((java lang Class) #<procedure:const>) ((java lang Cloneable) #<procedure:const>) ((java lang Integer) #<procedure:const>) ((java lang Number) #<procedure:const>) ((java lang Object) #<procedure:const>) ((java lang Short) #<procedure:const>) ((java lang String) #<procedure:const>) ((java lang System) #<procedure:const>) ((java util Arrays) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (java lang String) in (((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((java lang Comparable) #<procedure:const>) ((java io OutputStream) #<procedure:const>) ((java io PrintStream) #<procedure:const>) ((java io Serializable) #<procedure:const>) ((java lang Boolean) #<procedure:const>) ((java lang Byte) #<procedure:const>) ((java lang Character) #<procedure:const>) ((java lang Class) #<procedure:const>) ((java lang Cloneable) #<procedure:const>) ((java lang Integer) #<procedure:const>) ((java lang Number) #<procedure:const>) ((java lang Object) #<procedure:const>) ((java lang Short) #<procedure:const>) ((java lang String) #<procedure:const>) ((java lang System) #<procedure:const>) ((java util Arrays) #<procedure:const>))
Looking for (Object) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (java lang String) in (((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((java lang Comparable) #<procedure:const>) ((java io OutputStream) #<procedure:const>) ((java io PrintStream) #<procedure:const>) ((java io Serializable) #<procedure:const>) ((java lang Boolean) #<procedure:const>) ((java lang Byte) #<procedure:const>) ((java lang Character) #<procedure:const>) ((java lang Class) #<procedure:const>) ((java lang Cloneable) #<procedure:const>) ((java lang Integer) #<procedure:const>) ((java lang Number) #<procedure:const>) ((java lang Object) #<procedure:const>) ((java lang Short) #<procedure:const>) ((java lang String) #<procedure:const>) ((java lang System) #<procedure:const>) ((java util Arrays) #<procedure:const>))
Looking for (java lang String) in (((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((java lang Comparable) #<procedure:const>) ((java io OutputStream) #<procedure:const>) ((java io PrintStream) #<procedure:const>) ((java io Serializable) #<procedure:const>) ((java lang Boolean) #<procedure:const>) ((java lang Byte) #<procedure:const>) ((java lang Character) #<procedure:const>) ((java lang Class) #<procedure:const>) ((java lang Cloneable) #<procedure:const>) ((java lang Integer) #<procedure:const>) ((java lang Number) #<procedure:const>) ((java lang Object) #<procedure:const>) ((java lang Short) #<procedure:const>) ((java lang String) #<procedure:const>) ((java lang System) #<procedure:const>) ((java util Arrays) #<procedure:const>))
Looking for (java lang String) in (((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((java lang Comparable) #<procedure:const>) ((java io OutputStream) #<procedure:const>) ((java io PrintStream) #<procedure:const>) ((java io Serializable) #<procedure:const>) ((java lang Boolean) #<procedure:const>) ((java lang Byte) #<procedure:const>) ((java lang Character) #<procedure:const>) ((java lang Class) #<procedure:const>) ((java lang Cloneable) #<procedure:const>) ((java lang Integer) #<procedure:const>) ((java lang Number) #<procedure:const>) ((java lang Object) #<procedure:const>) ((java lang Short) #<procedure:const>) ((java lang String) #<procedure:const>) ((java lang System) #<procedure:const>) ((java util Arrays) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (java lang String) in (((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((java lang Comparable) #<procedure:const>) ((java io OutputStream) #<procedure:const>) ((java io PrintStream) #<procedure:const>) ((java io Serializable) #<procedure:const>) ((java lang Boolean) #<procedure:const>) ((java lang Byte) #<procedure:const>) ((java lang Character) #<procedure:const>) ((java lang Class) #<procedure:const>) ((java lang Cloneable) #<procedure:const>) ((java lang Integer) #<procedure:const>) ((java lang Number) #<procedure:const>) ((java lang Object) #<procedure:const>) ((java lang Short) #<procedure:const>) ((java lang String) #<procedure:const>) ((java lang System) #<procedure:const>) ((java util Arrays) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (Object) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (String) in (((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
############ LINKING NAMES IN CLASS: (java lang System) ############
Looking for (PrintStream) in (((System) #<procedure:const>) ((PrintStream) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Looking for (PrintStream) in (((System) #<procedure:const>) ((PrintStream) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
############ LINKING NAMES IN CLASS: (java util Arrays) ############

============== Environments ==============
Types

Vars

Constructors

Methods
VAR: value
Types
(toString(), #s(rtype (java lang String)))
(value, #s(ptype boolean))

Vars
(value, g245)

Constructors
((), g245)
((#s(ptype boolean)), g245)

Methods
(toString(), g245)
VAR: MAX_VALUE
Types

Vars

Constructors

Methods
VAR: value
Types
(toString(), #s(rtype (java lang String)))
(value, #s(ptype byte))

Vars
(value, g249)

Constructors
((), g249)
((#s(ptype byte)), g249)

Methods
(toString(), g249)
VAR: MAX_VALUE
Types

Vars

Constructors

Methods
VAR: value
Types

Vars

Constructors

Methods
VAR: value
Types
(toString(), #s(rtype (java lang String)))
(parseInt(#s(rtype (java lang String))), #s(ptype int))
(intValue(), #s(ptype int))
(value, #s(ptype int))

Vars
(value, g260)

Constructors
((), g260)
((#s(rtype (java lang String))), g260)
((#s(ptype int)), g260)

Methods
(toString(), g260)
(parseInt(#s(rtype (java lang String))), g260)
(intValue(), g260)
VAR: MAX_VALUE
Types

Vars

Constructors

Methods
VAR: value
Types

Vars

Constructors

Methods
VAR: chars
Types

Vars

Constructors

Methods
VAR: out

============== Heirarchy Checker ==========
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(rtype (java lang String)) #s(rtype (java lang String))
Types
(toString(), #s(rtype (java lang String)))

Vars

Constructors
((), g245)
((#s(ptype boolean)), g245)

Methods
(toString(), g245)
VAR: value
Types
(value, #s(ptype boolean))
(toString(), #s(rtype (java lang String)))

Vars
(value, g245)

Constructors
((), g245)
((#s(ptype boolean)), g245)

Methods
(toString(), g245)
VAR: MAX_VALUE
ADDING TYPEF!
Types
(MAX_VALUE, #s(ftype #s(ptype byte)))
(value, #s(ptype boolean))
(toString(), #s(rtype (java lang String)))

Vars
(MAX_VALUE, g245)
(value, g245)

Constructors
((), g245)
((#s(ptype boolean)), g245)

Methods
(toString(), g245)
type-ast=? #s(rtype (java lang String)) #s(rtype (java lang String))
Types
(toString(), #s(rtype (java lang String)))

Vars

Constructors
((), g249)
((#s(ptype byte)), g249)

Methods
(toString(), g249)
VAR: value
Types
(value, #s(ptype byte))
(toString(), #s(rtype (java lang String)))

Vars
(value, g249)

Constructors
((), g249)
((#s(ptype byte)), g249)

Methods
(toString(), g249)
VAR: MAX_VALUE
ADDING TYPEF!
Types
(MAX_VALUE, #s(ftype #s(ptype byte)))
(value, #s(ptype byte))
(toString(), #s(rtype (java lang String)))

Vars
(MAX_VALUE, g249)
(value, g249)

Constructors
((), g249)
((#s(ptype byte)), g249)

Methods
(toString(), g249)
type-ast=? #s(rtype (java lang String)) #s(rtype (java lang String))
Types
(toString(), #s(rtype (java lang String)))

Vars

Constructors
((), g253)
((#s(ptype char)), g253)

Methods
(toString(), g253)
VAR: value
type-ast=? #s(rtype (java lang String)) #s(rtype (java lang String))
type-ast=? #s(ptype int) #s(ptype int)
Types
(toString(), #s(rtype (java lang String)))
(parseInt(#s(rtype (java lang String))), #s(ptype int))
(intValue(), #s(ptype int))

Vars

Constructors
((), g260)
((#s(rtype (java lang String))), g260)
((#s(ptype int)), g260)

Methods
(toString(), g260)
(parseInt(#s(rtype (java lang String))), g260)
(intValue(), g260)
VAR: value
Types
(value, #s(ptype int))
(toString(), #s(rtype (java lang String)))
(parseInt(#s(rtype (java lang String))), #s(ptype int))
(intValue(), #s(ptype int))

Vars
(value, g260)

Constructors
((), g260)
((#s(rtype (java lang String))), g260)
((#s(ptype int)), g260)

Methods
(toString(), g260)
(parseInt(#s(rtype (java lang String))), g260)
(intValue(), g260)
VAR: MAX_VALUE
ADDING TYPEF!
Types
(MAX_VALUE, #s(ftype #s(ptype int)))
(value, #s(ptype int))
(toString(), #s(rtype (java lang String)))
(parseInt(#s(rtype (java lang String))), #s(ptype int))
(intValue(), #s(ptype int))

Vars
(MAX_VALUE, g260)
(value, g260)

Constructors
((), g260)
((#s(rtype (java lang String))), g260)
((#s(ptype int)), g260)

Methods
(toString(), g260)
(parseInt(#s(rtype (java lang String))), g260)
(intValue(), g260)
type-ast=? #s(rtype (java lang String)) #s(rtype (java lang String))
type-ast=? #s(ptype int) #s(ptype int)
Types
(toString(), #s(rtype (java lang String)))
(intValue(), #s(ptype int))

Vars

Constructors
((), g282)
((#s(ptype short)), g282)

Methods
(toString(), g282)
(intValue(), g282)
VAR: value
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(rtype (java lang String)) #s(rtype (java lang String))
type-ast=? #s(ptype int) #s(ptype int)
Types
(indexOf(#s(rtype (java lang String))), #s(ptype int))
(toCharArray(), #s(atype #s(ptype char)))
(compareTo(#s(rtype (java lang String))), #s(ptype int))
(compareTo(#s(rtype (java lang Object))), #s(ptype int))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(trim(), #s(rtype (java lang String)))
(substring(#s(ptype int) #s(ptype int)), #s(rtype (java lang String)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(valueOf(#s(rtype (java lang String))), #s(rtype (java lang String)))
(valueOf(#s(rtype (java lang Object))), #s(rtype (java lang String)))
(valueOf(#s(ptype boolean)), #s(rtype (java lang String)))
(valueOf(#s(ptype byte)), #s(rtype (java lang String)))
(valueOf(#s(ptype short)), #s(rtype (java lang String)))
(valueOf(#s(ptype int)), #s(rtype (java lang String)))
(valueOf(#s(ptype char)), #s(rtype (java lang String)))
(concat(#s(rtype (java lang String))), #s(rtype (java lang String)))
(charAt(#s(ptype int)), #s(ptype char))
(length(), #s(ptype int))

Vars

Constructors
((#s(rtype (java lang String))), g287)
((#s(atype #s(ptype char))), g287)
((), g287)

Methods
(indexOf(#s(rtype (java lang String))), g287)
(toCharArray(), g287)
(compareTo(#s(rtype (java lang String))), g287)
(compareTo(#s(rtype (java lang Object))), g287)
(toString(), g287)
(hashCode(), g287)
(trim(), g287)
(substring(#s(ptype int) #s(ptype int)), g287)
(equals(#s(rtype (java lang Object))), g287)
(valueOf(#s(rtype (java lang String))), g287)
(valueOf(#s(rtype (java lang Object))), g287)
(valueOf(#s(ptype boolean)), g287)
(valueOf(#s(ptype byte)), g287)
(valueOf(#s(ptype short)), g287)
(valueOf(#s(ptype int)), g287)
(valueOf(#s(ptype char)), g287)
(concat(#s(rtype (java lang String))), g287)
(charAt(#s(ptype int)), g287)
(length(), g287)
VAR: chars
Types
(gc(), #s(ptype void))

Vars

Constructors
((), g346)

Methods
(gc(), g346)
VAR: out
ADDING TYPEF!
Types
(out, #s(ftype #s(rtype (java io PrintStream))))
(gc(), #s(ptype void))

Vars
(out, g346)

Constructors
((), g346)

Methods
(gc(), g346)

=====================Local Environment Generation=========================
Types

Vars

Constructors

Methods
VAR: x
ADDING TYPEF!
Types
(x, #s(ftype #s(rtype (CompB))))

Vars
(x, g151)

Constructors

Methods
Types

Vars

Constructors

Methods
VAR: o
Types

Vars

Constructors

Methods
VAR: o
Types

Vars

Constructors

Methods
VAR: c
Types

Vars

Constructors

Methods
VAR: b
Types

Vars

Constructors

Methods
VAR: b
Types

Vars

Constructors

Methods
VAR: s
Types
(s, #s(rtype (java lang String)))

Vars
(s, g228)

Constructors

Methods
VAR: i
ADDING TYPEF!
Types
(i, #s(ftype #s(ptype int)))
(s, #s(rtype (java lang String)))

Vars
(i, g229)
(s, g228)

Constructors

Methods
Types

Vars

Constructors

Methods
VAR: s
Types

Vars

Constructors

Methods
VAR: b
Types

Vars

Constructors

Methods
VAR: b
Types

Vars

Constructors

Methods
VAR: b
Types

Vars

Constructors

Methods
VAR: b
Types

Vars

Constructors

Methods
VAR: b
Types

Vars

Constructors

Methods
VAR: b
Types

Vars

Constructors

Methods
VAR: b
Types

Vars

Constructors

Methods
VAR: b
Types

Vars

Constructors

Methods
VAR: b
Types

Vars

Constructors

Methods
VAR: b
Types

Vars

Constructors

Methods
VAR: b
Types

Vars

Constructors

Methods
VAR: b
Types

Vars

Constructors

Methods
VAR: i
Types

Vars

Constructors

Methods
VAR: i
Types

Vars

Constructors

Methods
VAR: i
Types

Vars

Constructors

Methods
VAR: i
Types

Vars

Constructors

Methods
VAR: s
Types
(s, #s(rtype (java lang String)))

Vars
(s, g263)

Constructors

Methods
VAR: ret
ADDING TYPEF!
Types
(ret, #s(ftype #s(ptype int)))
(s, #s(rtype (java lang String)))

Vars
(ret, g263)
(s, g263)

Constructors

Methods
Types
(ret, #s(ptype int))
(s, #s(rtype (java lang String)))

Vars
(ret, g263)
(s, g263)

Constructors

Methods
VAR: neg
ADDING TYPEF!
Types
(neg, #s(ftype #s(ptype boolean)))
(ret, #s(ptype int))
(s, #s(rtype (java lang String)))

Vars
(neg, g266)
(ret, g263)
(s, g263)

Constructors

Methods
Types
(neg, #s(ptype boolean))
(ret, #s(ptype int))
(s, #s(rtype (java lang String)))

Vars
(neg, g266)
(ret, g263)
(s, g263)

Constructors

Methods
VAR: i
ADDING TYPEF!
Types
(i, #s(ftype #s(ptype int)))
(neg, #s(ptype boolean))
(ret, #s(ptype int))
(s, #s(rtype (java lang String)))

Vars
(i, g267)
(neg, g266)
(ret, g263)
(s, g263)

Constructors

Methods
Types

Vars

Constructors

Methods
VAR: s
Types

Vars

Constructors

Methods
VAR: other
Types

Vars

Constructors

Methods
VAR: i
Types

Vars

Constructors

Methods
VAR: i
Types

Vars

Constructors

Methods
VAR: chars
Types
(chars, #s(atype #s(ptype char)))

Vars
(chars, g291)

Constructors

Methods
VAR: i
ADDING TYPEF!
Types
(i, #s(ftype #s(ptype int)))
(chars, #s(atype #s(ptype char)))

Vars
(i, g292)
(chars, g291)

Constructors

Methods
Types

Vars

Constructors

Methods
VAR: other
Types

Vars

Constructors

Methods
VAR: s2
Types
(s2, #s(rtype (java lang String)))

Vars
(s2, g294)

Constructors

Methods
VAR: i
ADDING TYPEF!
Types
(i, #s(ftype #s(ptype int)))
(s2, #s(rtype (java lang String)))

Vars
(i, g294)
(s2, g294)

Constructors

Methods
Types
(i, #s(ptype int))
(s2, #s(rtype (java lang String)))

Vars
(i, g294)
(s2, g294)

Constructors

Methods
VAR: newchars
ADDING TYPEF!
Types
(newchars, #s(ftype #s(atype #s(ptype char))))
(i, #s(ptype int))
(s2, #s(rtype (java lang String)))

Vars
(newchars, g297)
(i, g294)
(s2, g294)

Constructors

Methods
Types

Vars

Constructors

Methods
VAR: c
Types
(c, #s(ptype char))

Vars
(c, g299)

Constructors

Methods
VAR: newchars
ADDING TYPEF!
Types
(newchars, #s(ftype #s(atype #s(ptype char))))
(c, #s(ptype char))

Vars
(newchars, g299)
(c, g299)

Constructors

Methods
Types

Vars

Constructors

Methods
VAR: i
Types
(i, #s(ptype int))

Vars
(i, g301)

Constructors

Methods
VAR: ret
ADDING TYPEF!
Types
(ret, #s(ftype #s(atype #s(ptype char))))
(i, #s(ptype int))

Vars
(ret, g301)
(i, g301)

Constructors

Methods
Types
(ret, #s(atype #s(ptype char)))
(i, #s(ptype int))

Vars
(ret, g301)
(i, g301)

Constructors

Methods
VAR: j
ADDING TYPEF!
Types
(j, #s(ftype #s(ptype int)))
(ret, #s(atype #s(ptype char)))
(i, #s(ptype int))

Vars
(j, g309)
(ret, g301)
(i, g301)

Constructors

Methods
Types
(j, #s(ptype int))
(ret, #s(atype #s(ptype char)))
(i, #s(ptype int))

Vars
(j, g309)
(ret, g301)
(i, g301)

Constructors

Methods
VAR: wasneg
ADDING TYPEF!
Types
(wasneg, #s(ftype #s(ptype boolean)))
(j, #s(ptype int))
(ret, #s(atype #s(ptype char)))
(i, #s(ptype int))

Vars
(wasneg, g310)
(j, g309)
(ret, g301)
(i, g301)

Constructors

Methods
Types
(wasneg, #s(ptype boolean))
(j, #s(ptype int))
(ret, #s(atype #s(ptype char)))
(i, #s(ptype int))

Vars
(wasneg, g310)
(j, g309)
(ret, g301)
(i, g301)

Constructors

Methods
VAR: d
ADDING TYPEF!
Types
(d, #s(ftype #s(ptype int)))
(wasneg, #s(ptype boolean))
(j, #s(ptype int))
(ret, #s(atype #s(ptype char)))
(i, #s(ptype int))

Vars
(d, g305)
(wasneg, g310)
(j, g309)
(ret, g301)
(i, g301)

Constructors

Methods
Types
(wasneg, #s(ptype boolean))
(j, #s(ptype int))
(ret, #s(atype #s(ptype char)))
(i, #s(ptype int))

Vars
(wasneg, g310)
(j, g309)
(ret, g301)
(i, g301)

Constructors

Methods
VAR: ret2
ADDING TYPEF!
Types
(ret2, #s(ftype #s(atype #s(ptype char))))
(wasneg, #s(ptype boolean))
(j, #s(ptype int))
(ret, #s(atype #s(ptype char)))
(i, #s(ptype int))

Vars
(ret2, g311)
(wasneg, g310)
(j, g309)
(ret, g301)
(i, g301)

Constructors

Methods
Types

Vars

Constructors

Methods
VAR: i
Types

Vars

Constructors

Methods
VAR: i
Types

Vars

Constructors

Methods
VAR: b
Types

Vars

Constructors

Methods
VAR: o
Types

Vars

Constructors

Methods
VAR: o
Types

Vars

Constructors

Methods
VAR: o
Types

Vars

Constructors

Methods
VAR: i
Types
(i, #s(ptype int))

Vars
(i, g319)

Constructors

Methods
VAR: j
Types
(j, #s(ptype int))
(i, #s(ptype int))

Vars
(j, g319)
(i, g319)

Constructors

Methods
VAR: k
ADDING TYPEF!
Types
(k, #s(ftype #s(ptype int)))
(j, #s(ptype int))
(i, #s(ptype int))

Vars
(k, g319)
(j, g319)
(i, g319)

Constructors

Methods
Types
(k, #s(ptype int))
(j, #s(ptype int))
(i, #s(ptype int))

Vars
(k, g319)
(j, g319)
(i, g319)

Constructors

Methods
VAR: ret
ADDING TYPEF!
Types
(ret, #s(ftype #s(atype #s(ptype char))))
(k, #s(ptype int))
(j, #s(ptype int))
(i, #s(ptype int))

Vars
(ret, g321)
(k, g319)
(j, g319)
(i, g319)

Constructors

Methods
Types

Vars

Constructors

Methods
VAR: i
ADDING TYPEF!
Types
(i, #s(ftype #s(ptype int)))

Vars
(i, g323)

Constructors

Methods
Types
(i, #s(ptype int))

Vars
(i, g323)

Constructors

Methods
VAR: j
ADDING TYPEF!
Types
(j, #s(ftype #s(ptype int)))
(i, #s(ptype int))

Vars
(j, g326)
(i, g323)

Constructors

Methods
Types

Vars

Constructors

Methods
VAR: h
ADDING TYPEF!
Types
(h, #s(ftype #s(ptype int)))

Vars
(h, g328)

Constructors

Methods
Types
(h, #s(ptype int))

Vars
(h, g328)

Constructors

Methods
VAR: i
ADDING TYPEF!
Types
(i, #s(ftype #s(ptype int)))
(h, #s(ptype int))

Vars
(i, g329)
(h, g328)

Constructors

Methods
Types

Vars

Constructors

Methods
VAR: other
Types

Vars

Constructors

Methods
VAR: other
Types
(other, #s(rtype (java lang String)))

Vars
(other, g333)

Constructors

Methods
VAR: i
ADDING TYPEF!
Types
(i, #s(ftype #s(ptype int)))
(other, #s(rtype (java lang String)))

Vars
(i, g333)
(other, g333)

Constructors

Methods
Types
(i, #s(ptype int))
(other, #s(rtype (java lang String)))

Vars
(i, g333)
(other, g333)

Constructors

Methods
VAR: b
ADDING TYPEF!
Types
(b, #s(ftype #s(ptype boolean)))
(i, #s(ptype int))
(other, #s(rtype (java lang String)))

Vars
(b, g335)
(i, g333)
(other, g333)

Constructors

Methods
Types

Vars

Constructors

Methods
VAR: ret
ADDING TYPEF!
Types
(ret, #s(ftype #s(atype #s(ptype char))))

Vars
(ret, g337)

Constructors

Methods
Types
(ret, #s(atype #s(ptype char)))

Vars
(ret, g337)

Constructors

Methods
VAR: i
ADDING TYPEF!
Types
(i, #s(ftype #s(ptype int)))
(ret, #s(atype #s(ptype char)))

Vars
(i, g338)
(ret, g337)

Constructors

Methods
Types

Vars

Constructors

Methods
VAR: needle
Types
(needle, #s(rtype (java lang String)))

Vars
(needle, g340)

Constructors

Methods
VAR: offset
ADDING TYPEF!
Types
(offset, #s(ftype #s(ptype int)))
(needle, #s(rtype (java lang String)))

Vars
(offset, g340)
(needle, g340)

Constructors

Methods
Types
(offset, #s(ptype int))
(needle, #s(rtype (java lang String)))

Vars
(offset, g340)
(needle, g340)

Constructors

Methods
VAR: i
ADDING TYPEF!
Types
(i, #s(ftype #s(ptype int)))
(offset, #s(ptype int))
(needle, #s(rtype (java lang String)))

Vars
(i, g344)
(offset, g340)
(needle, g340)

Constructors

Methods
Types
(i, #s(ptype int))
(offset, #s(ptype int))
(needle, #s(rtype (java lang String)))

Vars
(i, g344)
(offset, g340)
(needle, g340)

Constructors

Methods
VAR: found
ADDING TYPEF!
Types
(found, #s(ftype #s(ptype boolean)))
(i, #s(ptype int))
(offset, #s(ptype int))
(needle, #s(rtype (java lang String)))

Vars
(found, g341)
(i, g344)
(offset, g340)
(needle, g340)

Constructors

Methods
Types

Vars

Constructors

Methods
VAR: a1
Types
(a1, #s(atype #s(ptype boolean)))

Vars
(a1, g351)

Constructors

Methods
VAR: a2
Types
(a2, #s(atype #s(ptype boolean)))
(a1, #s(atype #s(ptype boolean)))

Vars
(a2, g351)
(a1, g351)

Constructors

Methods
VAR: i
ADDING TYPEF!
Types
(i, #s(ftype #s(ptype int)))
(a2, #s(atype #s(ptype boolean)))
(a1, #s(atype #s(ptype boolean)))

Vars
(i, g352)
(a2, g351)
(a1, g351)

Constructors

Methods
Types

Vars

Constructors

Methods
VAR: a1
Types
(a1, #s(atype #s(ptype char)))

Vars
(a1, g353)

Constructors

Methods
VAR: a2
Types
(a2, #s(atype #s(ptype char)))
(a1, #s(atype #s(ptype char)))

Vars
(a2, g353)
(a1, g353)

Constructors

Methods
VAR: i
ADDING TYPEF!
Types
(i, #s(ftype #s(ptype int)))
(a2, #s(atype #s(ptype char)))
(a1, #s(atype #s(ptype char)))

Vars
(i, g354)
(a2, g353)
(a1, g353)

Constructors

Methods
========== CINFO FOR Main ==========
Types
(test(), #s(ptype int))
(Main, #s(rtype (Main)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars

Constructors
((), g149)

Methods
(test(), g149)
(equals(#s(rtype (java lang Object))), g275)
(toString(), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)
========== CINFO FOR CompA ==========
Types
(CompA, #s(rtype (CompA)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars

Constructors
((), g153)

Methods
(equals(#s(rtype (java lang Object))), g275)
(toString(), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)
========== CINFO FOR CompB ==========
Types
(CompB, #s(rtype (CompB)))
(getClass(), #s(rtype (java lang Class)))
(clone(), #s(rtype (java lang Object)))
(hashCode(), #s(ptype int))
(toString(), #s(rtype (java lang String)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(compareTo(#s(rtype (java lang Object))), #s(ptype int))

Vars

Constructors
((), g155)

Methods
(getClass(), g275)
(clone(), g275)
(hashCode(), g275)
(toString(), g275)
(equals(#s(rtype (java lang Object))), g275)
(compareTo(#s(rtype (java lang Object))), g160)
========== CINFO FOR CompC ==========
Types
(compareTo(#s(rtype (java lang Object))), #s(ptype int))
(CompC, #s(rtype (CompC)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars

Constructors
((), g157)

Methods
(compareTo(#s(rtype (java lang Object))), g157)
(equals(#s(rtype (java lang Object))), g275)
(toString(), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)
========== CINFO FOR java.lang.Comparable ==========
Types
(compareTo(#s(rtype (java lang Object))), #s(ptype int))
(Comparable, #s(rtype (java lang Comparable)))

Vars

Constructors

Methods
(compareTo(#s(rtype (java lang Object))), g160)
========== CINFO FOR java.io.OutputStream ==========
Types
(flush(), #s(ptype void))
(nativeWrite(#s(ptype int)), #s(ptype int))
(write(#s(ptype int)), #s(ptype void))
(write(#s(ptype char)), #s(ptype void))
(OutputStream, #s(rtype (java io OutputStream)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars

Constructors
((), g220)

Methods
(flush(), g220)
(nativeWrite(#s(ptype int)), g220)
(write(#s(ptype int)), g220)
(write(#s(ptype char)), g220)
(equals(#s(rtype (java lang Object))), g275)
(toString(), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)
========== CINFO FOR java.io.PrintStream ==========
Types
(print(#s(ptype int)), #s(ptype void))
(print(#s(ptype short)), #s(ptype void))
(print(#s(ptype char)), #s(ptype void))
(print(#s(ptype byte)), #s(ptype void))
(print(#s(ptype boolean)), #s(ptype void))
(print(#s(rtype (java lang Object))), #s(ptype void))
(println(#s(ptype int)), #s(ptype void))
(println(#s(ptype short)), #s(ptype void))
(println(#s(ptype char)), #s(ptype void))
(println(#s(ptype byte)), #s(ptype void))
(println(#s(ptype boolean)), #s(ptype void))
(println(#s(rtype (java lang Object))), #s(ptype void))
(println(#s(rtype (java lang String))), #s(ptype void))
(println(), #s(ptype void))
(print(#s(rtype (java lang String))), #s(ptype void))
(PrintStream, #s(rtype (java io PrintStream)))
(getClass(), #s(rtype (java lang Class)))
(clone(), #s(rtype (java lang Object)))
(hashCode(), #s(ptype int))
(toString(), #s(rtype (java lang String)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(write(#s(ptype char)), #s(ptype void))
(write(#s(ptype int)), #s(ptype void))
(nativeWrite(#s(ptype int)), #s(ptype int))
(flush(), #s(ptype void))

Vars

Constructors
((), g226)

Methods
(print(#s(ptype int)), g226)
(print(#s(ptype short)), g226)
(print(#s(ptype char)), g226)
(print(#s(ptype byte)), g226)
(print(#s(ptype boolean)), g226)
(print(#s(rtype (java lang Object))), g226)
(println(#s(ptype int)), g226)
(println(#s(ptype short)), g226)
(println(#s(ptype char)), g226)
(println(#s(ptype byte)), g226)
(println(#s(ptype boolean)), g226)
(println(#s(rtype (java lang Object))), g226)
(println(#s(rtype (java lang String))), g226)
(println(), g226)
(print(#s(rtype (java lang String))), g226)
(getClass(), g275)
(clone(), g275)
(hashCode(), g275)
(toString(), g275)
(equals(#s(rtype (java lang Object))), g275)
(write(#s(ptype char)), g220)
(write(#s(ptype int)), g220)
(nativeWrite(#s(ptype int)), g220)
(flush(), g220)
========== CINFO FOR java.io.Serializable ==========
Types
(Serializable, #s(rtype (java io Serializable)))

Vars

Constructors

Methods
========== CINFO FOR java.lang.Boolean ==========
Types
(MAX_VALUE, #s(ptype byte))
(toString(), #s(rtype (java lang String)))
(value, #s(ptype boolean))
(Boolean, #s(rtype (java lang Boolean)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars
(MAX_VALUE, g245)
(value, g245)

Constructors
((), g245)
((#s(ptype boolean)), g245)

Methods
(toString(), g245)
(equals(#s(rtype (java lang Object))), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)
========== CINFO FOR java.lang.Byte ==========
Types
(MAX_VALUE, #s(ptype byte))
(toString(), #s(rtype (java lang String)))
(value, #s(ptype byte))
(Byte, #s(rtype (java lang Byte)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars
(MAX_VALUE, g249)
(value, g249)

Constructors
((), g249)
((#s(ptype byte)), g249)

Methods
(toString(), g249)
(equals(#s(rtype (java lang Object))), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)
========== CINFO FOR java.lang.Character ==========
Types
(toString(), #s(rtype (java lang String)))
(value, #s(ptype char))
(Character, #s(rtype (java lang Character)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars
(value, g253)

Constructors
((), g253)
((#s(ptype char)), g253)

Methods
(toString(), g253)
(equals(#s(rtype (java lang Object))), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)
========== CINFO FOR java.lang.Class ==========
Types
(Class, #s(rtype (java lang Class)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars

Constructors
((), g257)

Methods
(equals(#s(rtype (java lang Object))), g275)
(toString(), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)
========== CINFO FOR java.lang.Cloneable ==========
Types
(Cloneable, #s(rtype (java lang Cloneable)))

Vars

Constructors

Methods
========== CINFO FOR java.lang.Integer ==========
Types
(MAX_VALUE, #s(ptype int))
(toString(), #s(rtype (java lang String)))
(parseInt(#s(rtype (java lang String))), #s(ptype int))
(intValue(), #s(ptype int))
(value, #s(ptype int))
(Integer, #s(rtype (java lang Integer)))
(getClass(), #s(rtype (java lang Class)))
(clone(), #s(rtype (java lang Object)))
(hashCode(), #s(ptype int))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))

Vars
(MAX_VALUE, g260)
(value, g260)

Constructors
((), g260)
((#s(rtype (java lang String))), g260)
((#s(ptype int)), g260)

Methods
(toString(), g260)
(parseInt(#s(rtype (java lang String))), g260)
(intValue(), g260)
(getClass(), g275)
(clone(), g275)
(hashCode(), g275)
(equals(#s(rtype (java lang Object))), g275)
========== CINFO FOR java.lang.Number ==========
Types
(intValue(), #s(ptype int))
(Number, #s(rtype (java lang Number)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars

Constructors
((), g272)

Methods
(intValue(), g272)
(equals(#s(rtype (java lang Object))), g275)
(toString(), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)
========== CINFO FOR java.lang.Object ==========
Types
(getClass(), #s(rtype (java lang Class)))
(clone(), #s(rtype (java lang Object)))
(hashCode(), #s(ptype int))
(toString(), #s(rtype (java lang String)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(Object, #s(rtype (java lang Object)))

Vars

Constructors
((), g275)

Methods
(getClass(), g275)
(clone(), g275)
(hashCode(), g275)
(toString(), g275)
(equals(#s(rtype (java lang Object))), g275)
========== CINFO FOR java.lang.Short ==========
Types
(toString(), #s(rtype (java lang String)))
(intValue(), #s(ptype int))
(value, #s(ptype short))
(Short, #s(rtype (java lang Short)))
(getClass(), #s(rtype (java lang Class)))
(clone(), #s(rtype (java lang Object)))
(hashCode(), #s(ptype int))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))

Vars
(value, g282)

Constructors
((), g282)
((#s(ptype short)), g282)

Methods
(toString(), g282)
(intValue(), g282)
(getClass(), g275)
(clone(), g275)
(hashCode(), g275)
(equals(#s(rtype (java lang Object))), g275)
========== CINFO FOR java.lang.String ==========
Types
(indexOf(#s(rtype (java lang String))), #s(ptype int))
(toCharArray(), #s(atype #s(ptype char)))
(compareTo(#s(rtype (java lang String))), #s(ptype int))
(compareTo(#s(rtype (java lang Object))), #s(ptype int))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(trim(), #s(rtype (java lang String)))
(substring(#s(ptype int) #s(ptype int)), #s(rtype (java lang String)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(valueOf(#s(rtype (java lang String))), #s(rtype (java lang String)))
(valueOf(#s(rtype (java lang Object))), #s(rtype (java lang String)))
(valueOf(#s(ptype boolean)), #s(rtype (java lang String)))
(valueOf(#s(ptype byte)), #s(rtype (java lang String)))
(valueOf(#s(ptype short)), #s(rtype (java lang String)))
(valueOf(#s(ptype int)), #s(rtype (java lang String)))
(valueOf(#s(ptype char)), #s(rtype (java lang String)))
(concat(#s(rtype (java lang String))), #s(rtype (java lang String)))
(charAt(#s(ptype int)), #s(ptype char))
(length(), #s(ptype int))
(chars, #s(atype #s(ptype char)))
(String, #s(rtype (java lang String)))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars
(chars, g287)

Constructors
((#s(rtype (java lang String))), g287)
((#s(atype #s(ptype char))), g287)
((), g287)

Methods
(indexOf(#s(rtype (java lang String))), g287)
(toCharArray(), g287)
(compareTo(#s(rtype (java lang String))), g287)
(compareTo(#s(rtype (java lang Object))), g287)
(toString(), g287)
(hashCode(), g287)
(trim(), g287)
(substring(#s(ptype int) #s(ptype int)), g287)
(equals(#s(rtype (java lang Object))), g287)
(valueOf(#s(rtype (java lang String))), g287)
(valueOf(#s(rtype (java lang Object))), g287)
(valueOf(#s(ptype boolean)), g287)
(valueOf(#s(ptype byte)), g287)
(valueOf(#s(ptype short)), g287)
(valueOf(#s(ptype int)), g287)
(valueOf(#s(ptype char)), g287)
(concat(#s(rtype (java lang String))), g287)
(charAt(#s(ptype int)), g287)
(length(), g287)
(clone(), g275)
(getClass(), g275)
========== CINFO FOR java.lang.System ==========
Types
(gc(), #s(ptype void))
(out, #s(rtype (java io PrintStream)))
(System, #s(rtype (java lang System)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars
(out, g346)

Constructors
((), g346)

Methods
(gc(), g346)
(equals(#s(rtype (java lang Object))), g275)
(toString(), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)
========== CINFO FOR java.util.Arrays ==========
Types
(equals(#s(atype #s(ptype char)) #s(atype #s(ptype char))), #s(ptype boolean))
(equals(#s(atype #s(ptype boolean)) #s(atype #s(ptype boolean))), #s(ptype boolean))
(Arrays, #s(rtype (java util Arrays)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars

Constructors
((), g349)

Methods
(equals(#s(atype #s(ptype char)) #s(atype #s(ptype char))), g349)
(equals(#s(atype #s(ptype boolean)) #s(atype #s(ptype boolean))), g349)
(equals(#s(rtype (java lang Object))), g275)
(toString(), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)


============== Disambiguator ==========

====== DISAMBIGUATING NAMES FOR AST, class/interface: Main ======

-----Environment
Types
(test(), #s(ptype int))
(Main, #s(rtype (Main)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars

Constructors
((), g149)

Methods
(test(), g149)
(equals(#s(rtype (java lang Object))), g275)
(toString(), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)

-----Links
(((Main) #<procedure:const>) ((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Disambiguated: (x) to #s((varuse ast 1) #<envs> x)

====== DISAMBIGUATING NAMES FOR AST, class/interface: CompA ======

-----Environment
Types
(CompA, #s(rtype (CompA)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars

Constructors
((), g153)

Methods
(equals(#s(rtype (java lang Object))), g275)
(toString(), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)

-----Links
(((CompA) #<procedure:const>) ((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))

====== DISAMBIGUATING NAMES FOR AST, class/interface: CompB ======

-----Environment
Types
(CompB, #s(rtype (CompB)))
(getClass(), #s(rtype (java lang Class)))
(clone(), #s(rtype (java lang Object)))
(hashCode(), #s(ptype int))
(toString(), #s(rtype (java lang String)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(compareTo(#s(rtype (java lang Object))), #s(ptype int))

Vars

Constructors
((), g155)

Methods
(getClass(), g275)
(clone(), g275)
(hashCode(), g275)
(toString(), g275)
(equals(#s(rtype (java lang Object))), g275)
(compareTo(#s(rtype (java lang Object))), g160)

-----Links
(((CompB) #<procedure:const>) ((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))

====== DISAMBIGUATING NAMES FOR AST, class/interface: CompC ======

-----Environment
Types
(compareTo(#s(rtype (java lang Object))), #s(ptype int))
(CompC, #s(rtype (CompC)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars

Constructors
((), g157)

Methods
(compareTo(#s(rtype (java lang Object))), g157)
(equals(#s(rtype (java lang Object))), g275)
(toString(), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)

-----Links
(((CompC) #<procedure:const>) ((Main) #<procedure:const>) ((CompA) #<procedure:const>) ((CompB) #<procedure:const>) ((CompC) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))

====== DISAMBIGUATING NAMES FOR AST, class/interface: java.lang.Comparable ======

-----Environment
Types
(compareTo(#s(rtype (java lang Object))), #s(ptype int))
(Comparable, #s(rtype (java lang Comparable)))
(getClass(), #s(rtype (java lang Class)))
(clone(), #s(rtype (java lang Object)))
(hashCode(), #s(ptype int))
(toString(), #s(rtype (java lang String)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))

Vars

Constructors

Methods
(compareTo(#s(rtype (java lang Object))), g160)
(getClass(), g275)
(clone(), g275)
(hashCode(), g275)
(toString(), g275)
(equals(#s(rtype (java lang Object))), g275)

-----Links
(((Comparable) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))

====== DISAMBIGUATING NAMES FOR AST, class/interface: java.io.OutputStream ======

-----Environment
Types
(flush(), #s(ptype void))
(nativeWrite(#s(ptype int)), #s(ptype int))
(write(#s(ptype int)), #s(ptype void))
(write(#s(ptype char)), #s(ptype void))
(OutputStream, #s(rtype (java io OutputStream)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars

Constructors
((), g220)

Methods
(flush(), g220)
(nativeWrite(#s(ptype int)), g220)
(write(#s(ptype int)), g220)
(write(#s(ptype char)), g220)
(equals(#s(rtype (java lang Object))), g275)
(toString(), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)

-----Links
(((OutputStream) #<procedure:const>) ((OutputStream) #<procedure:const>) ((PrintStream) #<procedure:const>) ((Serializable) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Disambiguated: (PrintStream) to #s(rtype (java io PrintStream))

====== DISAMBIGUATING NAMES FOR AST, class/interface: java.io.PrintStream ======

-----Environment
Types
(print(#s(ptype int)), #s(ptype void))
(print(#s(ptype short)), #s(ptype void))
(print(#s(ptype char)), #s(ptype void))
(print(#s(ptype byte)), #s(ptype void))
(print(#s(ptype boolean)), #s(ptype void))
(print(#s(rtype (java lang Object))), #s(ptype void))
(println(#s(ptype int)), #s(ptype void))
(println(#s(ptype short)), #s(ptype void))
(println(#s(ptype char)), #s(ptype void))
(println(#s(ptype byte)), #s(ptype void))
(println(#s(ptype boolean)), #s(ptype void))
(println(#s(rtype (java lang Object))), #s(ptype void))
(println(#s(rtype (java lang String))), #s(ptype void))
(println(), #s(ptype void))
(print(#s(rtype (java lang String))), #s(ptype void))
(PrintStream, #s(rtype (java io PrintStream)))
(getClass(), #s(rtype (java lang Class)))
(clone(), #s(rtype (java lang Object)))
(hashCode(), #s(ptype int))
(toString(), #s(rtype (java lang String)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(write(#s(ptype char)), #s(ptype void))
(write(#s(ptype int)), #s(ptype void))
(nativeWrite(#s(ptype int)), #s(ptype int))
(flush(), #s(ptype void))

Vars

Constructors
((), g226)

Methods
(print(#s(ptype int)), g226)
(print(#s(ptype short)), g226)
(print(#s(ptype char)), g226)
(print(#s(ptype byte)), g226)
(print(#s(ptype boolean)), g226)
(print(#s(rtype (java lang Object))), g226)
(println(#s(ptype int)), g226)
(println(#s(ptype short)), g226)
(println(#s(ptype char)), g226)
(println(#s(ptype byte)), g226)
(println(#s(ptype boolean)), g226)
(println(#s(rtype (java lang Object))), g226)
(println(#s(rtype (java lang String))), g226)
(println(), g226)
(print(#s(rtype (java lang String))), g226)
(getClass(), g275)
(clone(), g275)
(hashCode(), g275)
(toString(), g275)
(equals(#s(rtype (java lang Object))), g275)
(write(#s(ptype char)), g220)
(write(#s(ptype int)), g220)
(nativeWrite(#s(ptype int)), g220)
(flush(), g220)

-----Links
(((PrintStream) #<procedure:const>) ((OutputStream) #<procedure:const>) ((PrintStream) #<procedure:const>) ((Serializable) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Disambiguated: (s) to #s((varuse ast 1) #<envs> s)
Disambiguated: (s) to #s((varuse ast 1) #<envs> s)
Disambiguated: (String) to #s(rtype (java lang String))
Disambiguated: (String) to #s(rtype (java lang String))
Disambiguated: (String) to #s(rtype (java lang String))
Disambiguated: (String) to #s(rtype (java lang String))
Disambiguated: (String) to #s(rtype (java lang String))
Disambiguated: (String) to #s(rtype (java lang String))
Disambiguated: (String) to #s(rtype (java lang String))
Disambiguated: (String) to #s(rtype (java lang String))
Disambiguated: (String) to #s(rtype (java lang String))
Disambiguated: (String) to #s(rtype (java lang String))
Disambiguated: (String) to #s(rtype (java lang String))
Disambiguated: (String) to #s(rtype (java lang String))

====== DISAMBIGUATING NAMES FOR AST, class/interface: java.io.Serializable ======

-----Environment
Types
(Serializable, #s(rtype (java io Serializable)))
(getClass(), #s(rtype (java lang Class)))
(clone(), #s(rtype (java lang Object)))
(hashCode(), #s(ptype int))
(toString(), #s(rtype (java lang String)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))

Vars

Constructors

Methods
(getClass(), g275)
(clone(), g275)
(hashCode(), g275)
(toString(), g275)
(equals(#s(rtype (java lang Object))), g275)

-----Links
(((Serializable) #<procedure:const>) ((OutputStream) #<procedure:const>) ((PrintStream) #<procedure:const>) ((Serializable) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))

====== DISAMBIGUATING NAMES FOR AST, class/interface: java.lang.Boolean ======

-----Environment
Types
(MAX_VALUE, #s(ptype byte))
(toString(), #s(rtype (java lang String)))
(value, #s(ptype boolean))
(Boolean, #s(rtype (java lang Boolean)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars
(MAX_VALUE, g245)
(value, g245)

Constructors
((), g245)
((#s(ptype boolean)), g245)

Methods
(toString(), g245)
(equals(#s(rtype (java lang Object))), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)

-----Links
(((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Disambiguated: (String) to #s(rtype (java lang String))

====== DISAMBIGUATING NAMES FOR AST, class/interface: java.lang.Byte ======

-----Environment
Types
(MAX_VALUE, #s(ptype byte))
(toString(), #s(rtype (java lang String)))
(value, #s(ptype byte))
(Byte, #s(rtype (java lang Byte)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars
(MAX_VALUE, g249)
(value, g249)

Constructors
((), g249)
((#s(ptype byte)), g249)

Methods
(toString(), g249)
(equals(#s(rtype (java lang Object))), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)

-----Links
(((Byte) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Disambiguated: (String) to #s(rtype (java lang String))

====== DISAMBIGUATING NAMES FOR AST, class/interface: java.lang.Character ======

-----Environment
Types
(toString(), #s(rtype (java lang String)))
(value, #s(ptype char))
(Character, #s(rtype (java lang Character)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars
(value, g253)

Constructors
((), g253)
((#s(ptype char)), g253)

Methods
(toString(), g253)
(equals(#s(rtype (java lang Object))), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)

-----Links
(((Character) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Disambiguated: (String) to #s(rtype (java lang String))

====== DISAMBIGUATING NAMES FOR AST, class/interface: java.lang.Class ======

-----Environment
Types
(Class, #s(rtype (java lang Class)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars

Constructors
((), g257)

Methods
(equals(#s(rtype (java lang Object))), g275)
(toString(), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)

-----Links
(((Class) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))

====== DISAMBIGUATING NAMES FOR AST, class/interface: java.lang.Cloneable ======

-----Environment
Types
(Cloneable, #s(rtype (java lang Cloneable)))
(getClass(), #s(rtype (java lang Class)))
(clone(), #s(rtype (java lang Object)))
(hashCode(), #s(ptype int))
(toString(), #s(rtype (java lang String)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))

Vars

Constructors

Methods
(getClass(), g275)
(clone(), g275)
(hashCode(), g275)
(toString(), g275)
(equals(#s(rtype (java lang Object))), g275)

-----Links
(((Cloneable) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))

====== DISAMBIGUATING NAMES FOR AST, class/interface: java.lang.Integer ======

-----Environment
Types
(MAX_VALUE, #s(ptype int))
(toString(), #s(rtype (java lang String)))
(parseInt(#s(rtype (java lang String))), #s(ptype int))
(intValue(), #s(ptype int))
(value, #s(ptype int))
(Integer, #s(rtype (java lang Integer)))
(getClass(), #s(rtype (java lang Class)))
(clone(), #s(rtype (java lang Object)))
(hashCode(), #s(ptype int))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))

Vars
(MAX_VALUE, g260)
(value, g260)

Constructors
((), g260)
((#s(rtype (java lang String))), g260)
((#s(ptype int)), g260)

Methods
(toString(), g260)
(parseInt(#s(rtype (java lang String))), g260)
(intValue(), g260)
(getClass(), g275)
(clone(), g275)
(hashCode(), g275)
(equals(#s(rtype (java lang Object))), g275)

-----Links
(((Integer) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Disambiguated: (s) to #s((varuse ast 1) #<envs> s)
Disambiguated: (s) to #s((varuse ast 1) #<envs> s)
Disambiguated: (s) to #s((varuse ast 1) #<envs> s)
Disambiguated: (s) to #s((varuse ast 1) #<envs> s)
Disambiguated: (s) to #s((varuse ast 1) #<envs> s)
Disambiguated: (s) to #s((varuse ast 1) #<envs> s)
Disambiguated: (Integer) to #s(rtype (java lang Integer))
Disambiguated: (String) to #s(rtype (java lang String))

====== DISAMBIGUATING NAMES FOR AST, class/interface: java.lang.Number ======

-----Environment
Types
(intValue(), #s(ptype int))
(Number, #s(rtype (java lang Number)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars

Constructors
((), g272)

Methods
(intValue(), g272)
(equals(#s(rtype (java lang Object))), g275)
(toString(), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)

-----Links
(((Number) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))

====== DISAMBIGUATING NAMES FOR AST, class/interface: java.lang.Object ======

-----Environment
Types
(getClass(), #s(rtype (java lang Class)))
(clone(), #s(rtype (java lang Object)))
(hashCode(), #s(ptype int))
(toString(), #s(rtype (java lang String)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(Object, #s(rtype (java lang Object)))

Vars

Constructors
((), g275)

Methods
(getClass(), g275)
(clone(), g275)
(hashCode(), g275)
(toString(), g275)
(equals(#s(rtype (java lang Object))), g275)

-----Links
(((Object) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))

====== DISAMBIGUATING NAMES FOR AST, class/interface: java.lang.Short ======

-----Environment
Types
(toString(), #s(rtype (java lang String)))
(intValue(), #s(ptype int))
(value, #s(ptype short))
(Short, #s(rtype (java lang Short)))
(getClass(), #s(rtype (java lang Class)))
(clone(), #s(rtype (java lang Object)))
(hashCode(), #s(ptype int))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))

Vars
(value, g282)

Constructors
((), g282)
((#s(ptype short)), g282)

Methods
(toString(), g282)
(intValue(), g282)
(getClass(), g275)
(clone(), g275)
(hashCode(), g275)
(equals(#s(rtype (java lang Object))), g275)

-----Links
(((Short) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Disambiguated: (String) to #s(rtype (java lang String))

====== DISAMBIGUATING NAMES FOR AST, class/interface: java.lang.String ======

-----Environment
Types
(indexOf(#s(rtype (java lang String))), #s(ptype int))
(toCharArray(), #s(atype #s(ptype char)))
(compareTo(#s(rtype (java lang String))), #s(ptype int))
(compareTo(#s(rtype (java lang Object))), #s(ptype int))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(trim(), #s(rtype (java lang String)))
(substring(#s(ptype int) #s(ptype int)), #s(rtype (java lang String)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(valueOf(#s(rtype (java lang String))), #s(rtype (java lang String)))
(valueOf(#s(rtype (java lang Object))), #s(rtype (java lang String)))
(valueOf(#s(ptype boolean)), #s(rtype (java lang String)))
(valueOf(#s(ptype byte)), #s(rtype (java lang String)))
(valueOf(#s(ptype short)), #s(rtype (java lang String)))
(valueOf(#s(ptype int)), #s(rtype (java lang String)))
(valueOf(#s(ptype char)), #s(rtype (java lang String)))
(concat(#s(rtype (java lang String))), #s(rtype (java lang String)))
(charAt(#s(ptype int)), #s(ptype char))
(length(), #s(ptype int))
(chars, #s(atype #s(ptype char)))
(String, #s(rtype (java lang String)))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars
(chars, g287)

Constructors
((#s(rtype (java lang String))), g287)
((#s(atype #s(ptype char))), g287)
((), g287)

Methods
(indexOf(#s(rtype (java lang String))), g287)
(toCharArray(), g287)
(compareTo(#s(rtype (java lang String))), g287)
(compareTo(#s(rtype (java lang Object))), g287)
(toString(), g287)
(hashCode(), g287)
(trim(), g287)
(substring(#s(ptype int) #s(ptype int)), g287)
(equals(#s(rtype (java lang Object))), g287)
(valueOf(#s(rtype (java lang String))), g287)
(valueOf(#s(rtype (java lang Object))), g287)
(valueOf(#s(ptype boolean)), g287)
(valueOf(#s(ptype byte)), g287)
(valueOf(#s(ptype short)), g287)
(valueOf(#s(ptype int)), g287)
(valueOf(#s(ptype char)), g287)
(concat(#s(rtype (java lang String))), g287)
(charAt(#s(ptype int)), g287)
(length(), g287)
(clone(), g275)
(getClass(), g275)

-----Links
(((String) #<procedure:const>) ((Arrays) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Disambiguated: (chars length) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> chars) length)
Disambiguated: (chars length) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> chars) length)
Disambiguated: (chars length) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> chars) length)
Disambiguated: (other chars) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> other) chars)
Disambiguated: (s2) to #s((varuse ast 1) #<envs> s2)
Disambiguated: (s2) to #s((varuse ast 1) #<envs> s2)
Disambiguated: (s2 chars) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> s2) chars)
Disambiguated: (String) to #s(rtype (java lang String))
Disambiguated: (String) to #s(rtype (java lang String))
Disambiguated: (o) to #s((varuse ast 1) #<envs> o)
Disambiguated: (Arrays) to #s(rtype (java util Arrays))
Disambiguated: (chars length) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> chars) length)
Disambiguated: (chars length) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> chars) length)
Disambiguated: (other chars length) to #s((fieldaccess ast 1) #<envs> #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> other) chars) length)
Disambiguated: (chars length) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> chars) length)
Disambiguated: (other chars length) to #s((fieldaccess ast 1) #<envs> #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> other) chars) length)
Disambiguated: (other chars) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> other) chars)
Disambiguated: (other chars) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> other) chars)
Disambiguated: (chars length) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> chars) length)
Disambiguated: (ret length) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> ret) length)
Disambiguated: (needle) to #s((varuse ast 1) #<envs> needle)
Disambiguated: (needle chars) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> needle) chars)

====== DISAMBIGUATING NAMES FOR AST, class/interface: java.lang.System ======

-----Environment
Types
(gc(), #s(ptype void))
(out, #s(rtype (java io PrintStream)))
(System, #s(rtype (java lang System)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars
(out, g346)

Constructors
((), g346)

Methods
(gc(), g346)
(equals(#s(rtype (java lang Object))), g275)
(toString(), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)

-----Links
(((System) #<procedure:const>) ((PrintStream) #<procedure:const>) ((Comparable) #<procedure:const>) ((Boolean) #<procedure:const>) ((Byte) #<procedure:const>) ((Character) #<procedure:const>) ((Class) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Integer) #<procedure:const>) ((Number) #<procedure:const>) ((Object) #<procedure:const>) ((Short) #<procedure:const>) ((String) #<procedure:const>) ((System) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))

====== DISAMBIGUATING NAMES FOR AST, class/interface: java.util.Arrays ======

-----Environment
Types
(equals(#s(atype #s(ptype char)) #s(atype #s(ptype char))), #s(ptype boolean))
(equals(#s(atype #s(ptype boolean)) #s(atype #s(ptype boolean))), #s(ptype boolean))
(Arrays, #s(rtype (java util Arrays)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(toString(), #s(rtype (java lang String)))
(hashCode(), #s(ptype int))
(clone(), #s(rtype (java lang Object)))
(getClass(), #s(rtype (java lang Class)))

Vars

Constructors
((), g349)

Methods
(equals(#s(atype #s(ptype char)) #s(atype #s(ptype char))), g349)
(equals(#s(atype #s(ptype boolean)) #s(atype #s(ptype boolean))), g349)
(equals(#s(rtype (java lang Object))), g275)
(toString(), g275)
(hashCode(), g275)
(clone(), g275)
(getClass(), g275)

-----Links
(((Arrays) #<procedure:const>) ((Arrays) #<procedure:const>) ((System) #<procedure:const>) ((String) #<procedure:const>) ((Short) #<procedure:const>) ((Object) #<procedure:const>) ((Number) #<procedure:const>) ((Integer) #<procedure:const>) ((Cloneable) #<procedure:const>) ((Class) #<procedure:const>) ((Character) #<procedure:const>) ((Byte) #<procedure:const>) ((Boolean) #<procedure:const>) ((Comparable) #<procedure:const>))
Disambiguated: (a1 length) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> a1) length)
Disambiguated: (a2 length) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> a2) length)
Disambiguated: (a1 length) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> a1) length)
Disambiguated: (a1 length) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> a1) length)
Disambiguated: (a2 length) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> a2) length)
Disambiguated: (a1 length) to #s((fieldaccess ast 1) #<envs> #s((varuse ast 1) #<envs> a1) length)


=========== Type Checking ==========
superclass? A: (CompC), B: (CompB)
JHVIUFG ((CompC) (CompB) (CompA) (java lang Object))
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
superclass? A: (java io PrintStream), B: (java io OutputStream)
JHVIUFG ((java io PrintStream) (java io OutputStream) (java lang Object))
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype boolean) #s(ptype boolean)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(ptype byte) #s(ptype byte)
type-ast=? #s(ptype byte) #s(ptype byte)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(ptype byte) #s(ptype byte)
type-ast=? #s(ptype char) #s(ptype char)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
natype-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(rtype (java lang Object)) #s(rtype (java lang Object))
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(ptype int) #s(ptype int)
superclass? A: (java lang Object), B: (java lang Object)
JHVIUFG ((java lang Object))
type-ast=? #s(ptype short) #s(ptype short)
type-ast=? #s(ptype int) #s(ptype int)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype char) #s(ptype char)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype boolean) #s(ptype boolean)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype boolean) #s(ptype boolean)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype char) #s(ptype char)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype int) #s(ptype int)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
natype-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
natype-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype int) #s(ptype int)
natype-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype boolean) #s(ptype boolean)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(ptype boolean) #s(ptype boolean)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(ptype boolean) #s(ptype boolean)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(ptype boolean) #s(ptype boolean)
natype-ast=? #s(ptype boolean) #s(ptype boolean)
natype-ast=? #s(rtype (java lang Object)) #s(rtype (java lang String))
superclass? A: (java lang String), B: (java lang Object)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(rtype (java lang String)) #s(rtype (java lang Object))
superclass? A: (java lang Object), B: (java lang String)
JHVIUFG ((java lang Object))
superclass? A: (java lang String), B: (java lang Object)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(rtype (java lang String)) #s(rtype (java lang Object))
superclass? A: (java lang Object), B: (java lang String)
JHVIUFG ((java lang Object))
superclass? A: (java lang String), B: (java lang Object)
JHVIUFG ((java lang String) (java lang Object))
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
type-ast=? #s(rtype (java lang String)) #s(rtype (java lang Object))
superclass? A: (java lang Object), B: (java lang String)
JHVIUFG ((java lang Object))
superclass? A: (java lang String), B: (java lang Object)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(rtype (java lang String)) #s(rtype (java lang Object))
superclass? A: (java lang Object), B: (java lang String)
JHVIUFG ((java lang Object))
superclass? A: (java lang String), B: (java lang Object)
JHVIUFG ((java lang String) (java lang Object))
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
type-ast=? #s(rtype (java lang String)) #s(rtype (java lang Object))
superclass? A: (java lang Object), B: (java lang String)
JHVIUFG ((java lang Object))
superclass? A: (java lang String), B: (java lang Object)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(rtype (java lang String)) #s(rtype (java lang Object))
superclass? A: (java lang Object), B: (java lang String)
JHVIUFG ((java lang Object))
superclass? A: (java lang String), B: (java lang Object)
JHVIUFG ((java lang String) (java lang Object))
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
type-ast=? #s(ptype int) #s(ptype int)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
natype-ast=? #s(ptype boolean) #s(ptype boolean)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
natype-ast=? #s(ptype boolean) #s(ptype boolean)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
natype-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype boolean) #s(ptype boolean)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype boolean) #s(ptype boolean)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
superclass? A: (java lang String), B: (java lang String)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(rtype (java lang String)) #s(rtype (java lang Object))
superclass? A: (java lang Object), B: (java lang String)
JHVIUFG ((java lang Object))
superclass? A: (java lang String), B: (java lang Object)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(rtype (java lang String)) #s(rtype (java lang Object))
superclass? A: (java lang Object), B: (java lang String)
JHVIUFG ((java lang Object))
superclass? A: (java lang String), B: (java lang Object)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(rtype (java lang String)) #s(rtype (java lang Object))
superclass? A: (java lang Object), B: (java lang String)
JHVIUFG ((java lang Object))
superclass? A: (java lang String), B: (java lang Object)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(rtype (java lang String)) #s(rtype (java lang Object))
superclass? A: (java lang Object), B: (java lang String)
JHVIUFG ((java lang Object))
superclass? A: (java lang String), B: (java lang Object)
JHVIUFG ((java lang String) (java lang Object))
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
naTHING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
natype-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
naTHING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
naTHING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
naTHING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype char) #s(ptype char)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
naTHING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
THING: #s((vdecl ast 1) () public () #s(atype #s(ptype char)) chars)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
natype-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
superclass? A: (java io PrintStream), B: (java io PrintStream)
JHVIUFG ((java io PrintStream) (java io OutputStream) (java lang Object))
natype-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
natype-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype boolean) #s(ptype boolean)
natype-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype int) #s(ptype int)
type-ast=? #s(ptype int) #s(ptype int)
natype-ast=? #s(ptype boolean) #s(ptype boolean)
type-ast=? #s(ptype boolean) #s(ptype boolean)
c-unit
  ()
  (pimport (java lang))
  class public empty Main empty empty
  block g149
    constructor public (methoddecl Main)
      block g150
    method public (static) (ptype int) (methoddecl test)
      block g151
        (varassign (vdecl empty empty (rtype (CompB)) x) (classcreate (rtype (CompC)))
        block g152
          (return (methodcall (varuse x) compareTo(#s((cast ast 1) #<envs> #s(rtype (java lang Object)) #s((literal ast 1) () #s(ptype null) null)))))c-unit
  ()
  (pimport (java lang))
  class public empty CompA empty empty
  block g153
    constructor public (methoddecl CompA)
      block g154c-unit
  ()
  (pimport (java lang))
  class public abstract CompB (CompA) ((java lang Comparable))
  block g155
    constructor public (methoddecl CompB)
      block g156c-unit
  ()
  (pimport (java lang))
  class public empty CompC (CompB) empty
  block g157
    constructor public (methoddecl CompC)
      block g158
    method public empty (ptype int) (methoddecl compareTo (parameter (rtype (java lang Object)) o))
      block g159
        (return (literal (ptype int) 123))c-unit
  (java lang)
  (pimport (java lang))
  interface public empty Comparable empty
  block g160
    method public (abstract) (ptype int) (methoddecl compareTo (parameter (rtype (java lang Object)) o))
      block g161c-unit
  (java io)
  (pimport (java lang))
  class public empty OutputStream empty empty
  block g220
    constructor public (methoddecl OutputStream)
      block g221
    method public empty (ptype void) (methoddecl write (parameter (ptype char) c))
      block g222
        (methodcall (this (rtype (java io OutputStream))) write(#s((cast ast 1) #<envs> #s(ptype int) #s((varuse ast 1) #<envs> c))))
    method public empty (ptype void) (methoddecl write (parameter (ptype int) b))
      block g223
        (methodcall (rtype (java io PrintStream)) nativeWrite(#s((varuse ast 1) #<envs> b)))
    method protected (static native) (ptype int) (methoddecl nativeWrite (parameter (ptype int) b))
      block g225
    method public empty (ptype void) (methoddecl flush)
      block g224c-unit
  (java io)
  (pimport (java lang))
  class public empty PrintStream (java io OutputStream) empty
  block g226
    constructor public (methoddecl PrintStream)
      block g227
    method public empty (ptype void) (methoddecl print (parameter (rtype (java lang String)) s))
      block g228
        for (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0) (binop lt (varuse i) (methodcall (varuse s) lengthempty)) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
          block g229
            (methodcall (this (rtype (java io PrintStream))) write(#s((methodcall ast 1) #<envs> #s((varuse ast 1) #<envs> s) charAt (#s((varuse ast 1) #<envs> i)))))
    method public empty (ptype void) (methoddecl println)
      block g230
        (methodcall (this (rtype (java io PrintStream))) println(#s((literal ast 1) () #s(rtype (java lang String)) )))
    method public empty (ptype void) (methoddecl println (parameter (rtype (java lang String)) s))
      block g231
        (methodcall (this (rtype (java io PrintStream))) print(#s((varuse ast 1) #<envs> s)))
        (methodcall (this (rtype (java io PrintStream))) write(#s((literal ast 1) () #s(ptype char) 10)))
    method public empty (ptype void) (methoddecl println (parameter (rtype (java lang Object)) b))
      block g232
        (methodcall (this (rtype (java io PrintStream))) println(#s((methodcall ast 1) #<envs> #s(rtype (java lang String)) valueOf (#s((varuse ast 1) #<envs> b)))))
    method public empty (ptype void) (methoddecl println (parameter (ptype boolean) b))
      block g233
        (methodcall (this (rtype (java io PrintStream))) println(#s((methodcall ast 1) #<envs> #s(rtype (java lang String)) valueOf (#s((varuse ast 1) #<envs> b)))))
    method public empty (ptype void) (methoddecl println (parameter (ptype byte) b))
      block g234
        (methodcall (this (rtype (java io PrintStream))) println(#s((methodcall ast 1) #<envs> #s(rtype (java lang String)) valueOf (#s((varuse ast 1) #<envs> b)))))
    method public empty (ptype void) (methoddecl println (parameter (ptype char) b))
      block g235
        (methodcall (this (rtype (java io PrintStream))) println(#s((methodcall ast 1) #<envs> #s(rtype (java lang String)) valueOf (#s((varuse ast 1) #<envs> b)))))
    method public empty (ptype void) (methoddecl println (parameter (ptype short) b))
      block g236
        (methodcall (this (rtype (java io PrintStream))) println(#s((methodcall ast 1) #<envs> #s(rtype (java lang String)) valueOf (#s((varuse ast 1) #<envs> b)))))
    method public empty (ptype void) (methoddecl println (parameter (ptype int) b))
      block g237
        (methodcall (this (rtype (java io PrintStream))) println(#s((methodcall ast 1) #<envs> #s(rtype (java lang String)) valueOf (#s((varuse ast 1) #<envs> b)))))
    method public empty (ptype void) (methoddecl print (parameter (rtype (java lang Object)) b))
      block g238
        (methodcall (this (rtype (java io PrintStream))) print(#s((methodcall ast 1) #<envs> #s(rtype (java lang String)) valueOf (#s((varuse ast 1) #<envs> b)))))
    method public empty (ptype void) (methoddecl print (parameter (ptype boolean) b))
      block g239
        (methodcall (this (rtype (java io PrintStream))) print(#s((methodcall ast 1) #<envs> #s(rtype (java lang String)) valueOf (#s((varuse ast 1) #<envs> b)))))
    method public empty (ptype void) (methoddecl print (parameter (ptype byte) b))
      block g240
        (methodcall (this (rtype (java io PrintStream))) print(#s((methodcall ast 1) #<envs> #s(rtype (java lang String)) valueOf (#s((varuse ast 1) #<envs> b)))))
    method public empty (ptype void) (methoddecl print (parameter (ptype char) b))
      block g241
        (methodcall (this (rtype (java io PrintStream))) print(#s((methodcall ast 1) #<envs> #s(rtype (java lang String)) valueOf (#s((varuse ast 1) #<envs> b)))))
    method public empty (ptype void) (methoddecl print (parameter (ptype short) b))
      block g242
        (methodcall (this (rtype (java io PrintStream))) print(#s((methodcall ast 1) #<envs> #s(rtype (java lang String)) valueOf (#s((varuse ast 1) #<envs> b)))))
    method public empty (ptype void) (methoddecl print (parameter (ptype int) b))
      block g243
        (methodcall (this (rtype (java io PrintStream))) print(#s((methodcall ast 1) #<envs> #s(rtype (java lang String)) valueOf (#s((varuse ast 1) #<envs> b)))))c-unit
  (java io)
  (pimport (java lang))
  interface public empty Serializable empty
  block g244c-unit
  (java lang)
  (pimport (java lang))
  class public final Boolean empty empty
  block g245
    (vdecl public empty (ptype boolean) value)
    constructor public (methoddecl Boolean (parameter (ptype boolean) i))
      block g246
        (varassign (varuse value) (varuse i)
    constructor public (methoddecl Boolean)
      block g247
    method public empty (rtype (java lang String)) (methoddecl toString)
      block g248
        (return (methodcall (rtype (java lang String)) valueOf(#s((varuse ast 1) #<envs> value))))
    (varassign (vdecl public static (ptype byte) MAX_VALUE) (literal (ptype byte) 127)c-unit
  (java lang)
  (pimport (java lang))
  class public final Byte empty empty
  block g249
    (vdecl public empty (ptype byte) value)
    constructor public (methoddecl Byte (parameter (ptype byte) i))
      block g250
        (varassign (varuse value) (varuse i)
    constructor public (methoddecl Byte)
      block g251
    method public empty (rtype (java lang String)) (methoddecl toString)
      block g252
        (return (methodcall (rtype (java lang String)) valueOf(#s((varuse ast 1) #<envs> value))))
    (varassign (vdecl public static (ptype byte) MAX_VALUE) (literal (ptype byte) 127)c-unit
  (java lang)
  (pimport (java lang))
  class public final Character empty empty
  block g253
    (vdecl public empty (ptype char) value)
    constructor public (methoddecl Character (parameter (ptype char) i))
      block g254
        (varassign (varuse value) (varuse i)
    constructor public (methoddecl Character)
      block g255
    method public empty (rtype (java lang String)) (methoddecl toString)
      block g256
        (return (methodcall (rtype (java lang String)) valueOf(#s((varuse ast 1) #<envs> value))))c-unit
  (java lang)
  (pimport (java lang))
  class public empty Class empty empty
  block g257
    constructor public (methoddecl Class)
      block g258c-unit
  (java lang)
  (pimport (java lang))
  interface public empty Cloneable empty
  block g259c-unit
  (java lang)
  (pimport (java lang))
  class public final Integer (java lang Number) empty
  block g260
    (vdecl public empty (ptype int) value)
    constructor public (methoddecl Integer (parameter (ptype int) i))
      block g261
        (varassign (varuse value) (varuse i)
    method public empty (ptype int) (methoddecl intValue)
      block g262
        (return (varuse value))
    method public (static) (ptype int) (methoddecl parseInt (parameter (rtype (java lang String)) s))
      block g263
        (varassign (vdecl empty empty (ptype int) ret) (literal (ptype int) 0)
        block g266
          (varassign (vdecl empty empty (ptype boolean) neg) (literal (ptype boolean) #f)
          block g267
            (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0)
            block g268
              while (binop ampamp (binop lt (varuse i) (methodcall (varuse s) lengthempty)) (binop barbar (binop eqeq (methodcall (varuse s) charAt(#s((varuse ast 1) #<envs> i))) (literal (ptype char) 45)) (binop ampamp (binop gteq (methodcall (varuse s) charAt(#s((varuse ast 1) #<envs> i))) (literal (ptype char) 48)) (binop lteq (methodcall (varuse s) charAt(#s((varuse ast 1) #<envs> i))) (literal (ptype char) 57)))))
                block g264
                  iff (binop eqeq (methodcall (varuse s) charAt(#s((varuse ast 1) #<envs> i))) (literal (ptype char) 45)) (varassign (varuse neg) (unop not (varuse neg))block g265
                      (varassign (varuse ret) (binop minus (binop plus (binop star (varuse ret) (literal (ptype int) 10)) (methodcall (varuse s) charAt(#s((varuse ast 1) #<envs> i)))) (literal (ptype char) 48))
                  (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
              iff (varuse neg) (varassign (varuse ret) (unop minus (varuse ret))empty
              (return (varuse ret))
    constructor public (methoddecl Integer (parameter (rtype (java lang String)) s))
      block g269
        (varassign (varuse value) (methodcall (rtype (java lang Integer)) parseInt(#s((varuse ast 1) #<envs> s)))
    constructor public (methoddecl Integer)
      block g270
        (varassign (varuse value) (literal (ptype int) 0)
    method public empty (rtype (java lang String)) (methoddecl toString)
      block g271
        (return (methodcall (rtype (java lang String)) valueOf(#s((varuse ast 1) #<envs> value))))
    (varassign (vdecl public static (ptype int) MAX_VALUE) (literal (ptype int) 2147483647)c-unit
  (java lang)
  (pimport (java lang))
  class public abstract Number empty empty
  block g272
    method public (abstract) (ptype int) (methoddecl intValue)
      block g274
    constructor public (methoddecl Number)
      block g273c-unit
  (java lang)
  (pimport (java lang))
  class public empty Object empty empty
  block g275
    constructor public (methoddecl Object)
      block g276
    method public empty (ptype boolean) (methoddecl equals (parameter (rtype (java lang Object)) other))
      block g277
        (return (binop eqeq (this (rtype (java lang Object))) (varuse other)))
    method public empty (rtype (java lang String)) (methoddecl toString)
      block g278
        (return (literal (rtype (java lang String)) Some random object))
    method public empty (ptype int) (methoddecl hashCode)
      block g279
        (return (literal (ptype int) 42))
    method protected empty (rtype (java lang Object)) (methoddecl clone)
      block g280
        (return (this (rtype (java lang Object))))
    method public (final) (rtype (java lang Class)) (methoddecl getClass)
      block g281
        (return (literal (ptype null) null))c-unit
  (java lang)
  (pimport (java lang))
  class public final Short (java lang Number) empty
  block g282
    (vdecl public empty (ptype short) value)
    constructor public (methoddecl Short (parameter (ptype short) i))
      block g283
        (varassign (varuse value) (varuse i)
    method public empty (ptype int) (methoddecl intValue)
      block g284
        (return (cast (ptype int) (varuse value)))
    constructor public (methoddecl Short)
      block g285
    method public empty (rtype (java lang String)) (methoddecl toString)
      block g286
        (return (methodcall (rtype (java lang String)) valueOf(#s((varuse ast 1) #<envs> value))))c-unit
  (java lang)
  (pimport (java lang))
  (cimport (java util Arrays))
  class public empty String empty empty
  block g287
    (vdecl public empty (atype (ptype char)) chars)
    method public empty (ptype int) (methoddecl length)
      block g288
        (return (fieldaccess (varuse chars) length))
    method public empty (ptype char) (methoddecl charAt (parameter (ptype int) i))
      block g289
        (return (arrayaccess (varuse chars) (varuse i)))
    constructor public (methoddecl String)
      block g290
        (varassign (varuse chars) (arraycreate (ptype char) (literal (ptype int) 0))
    constructor public (methoddecl String (parameter (atype (ptype char)) chars))
      block g291
        (varassign (fieldaccess (this (rtype (java lang String))) chars) (arraycreate (ptype char) (fieldaccess (varuse chars) length))
        for (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0) (binop lt (varuse i) (fieldaccess (varuse chars) length)) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
          block g292
            (varassign (arrayaccess (fieldaccess (this (rtype (java lang String))) chars) (varuse i)) (arrayaccess (varuse chars) (varuse i))
    constructor public (methoddecl String (parameter (rtype (java lang String)) other))
      block g293
        (varassign (fieldaccess (this (rtype (java lang String))) chars) (fieldaccess (varuse other) chars)
    method public empty (rtype (java lang String)) (methoddecl concat (parameter (rtype (java lang String)) s2))
      block g294
        (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0)
        block g297
          (varassign (vdecl empty empty (atype (ptype char)) newchars) (arraycreate (ptype char) (binop plus (methodcall (this (rtype (java lang String))) lengthempty) (methodcall (varuse s2) lengthempty)))
          block g298
            for (varassign (varuse i) (literal (ptype int) 0) (binop lt (varuse i) (methodcall (this (rtype (java lang String))) lengthempty)) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
              block g295
                (varassign (arrayaccess (varuse newchars) (varuse i)) (arrayaccess (varuse chars) (varuse i))
            for (varassign (varuse i) (literal (ptype int) 0) (binop lt (varuse i) (methodcall (varuse s2) lengthempty)) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
              block g296
                (varassign (arrayaccess (varuse newchars) (binop plus (varuse i) (methodcall (this (rtype (java lang String))) lengthempty))) (arrayaccess (fieldaccess (varuse s2) chars) (varuse i))
            (return (classcreate (rtype (java lang String)) (varuse newchars)))
    method public (static) (rtype (java lang String)) (methoddecl valueOf (parameter (ptype char) c))
      block g299
        (varassign (vdecl empty empty (atype (ptype char)) newchars) (arraycreate (ptype char) (literal (ptype int) 1))
        block g300
          (varassign (arrayaccess (varuse newchars) (literal (ptype int) 0)) (varuse c)
          (return (classcreate (rtype (java lang String)) (varuse newchars)))
    method public (static) (rtype (java lang String)) (methoddecl valueOf (parameter (ptype int) i))
      block g301
        (varassign (vdecl empty empty (atype (ptype char)) ret) (arraycreate (ptype char) (literal (ptype int) 15))
        block g309
          (varassign (vdecl empty empty (ptype int) j) (literal (ptype int) 0)
          block g310
            (varassign (vdecl empty empty (ptype boolean) wasneg) (literal (ptype boolean) #f)
            block g311
              iff (binop eqeq (varuse i) (literal (ptype int) -2147483648)) (return (literal (rtype (java lang String)) -2147483648))empty
              iff (binop lt (varuse i) (literal (ptype int) 0)) block g302
                  (varassign (varuse wasneg) (literal (ptype boolean) #t)
                  (varassign (varuse i) (unop minus (varuse i))empty
              iff (binop eqeq (varuse i) (literal (ptype int) 0)) block g303
                  (varassign (arrayaccess (varuse ret) (varuse j)) (literal (ptype char) 48)
                  (varassign (varuse j) (binop plus (varuse j) (literal (ptype int) 1))block g304
                  while (binop gt (varuse i) (literal (ptype int) 0))
                    block g305
                      (varassign (vdecl empty empty (ptype int) d) (binop pct (varuse i) (literal (ptype int) 10))
                      block g306
                        (varassign (varuse i) (binop slash (varuse i) (literal (ptype int) 10))
                        (varassign (arrayaccess (varuse ret) (varuse j)) (cast (ptype char) (binop plus (varuse d) (literal (ptype char) 48)))
                        (varassign (varuse j) (binop plus (varuse j) (literal (ptype int) 1))
              iff (varuse wasneg) block g307
                  (varassign (arrayaccess (varuse ret) (varuse j)) (literal (ptype char) 45)
                  (varassign (varuse j) (binop plus (varuse j) (literal (ptype int) 1))empty
              (varassign (vdecl empty empty (atype (ptype char)) ret2) (arraycreate (ptype char) (varuse j))
              block g312
                for (varassign (varuse i) (literal (ptype int) 0) (binop lt (varuse i) (varuse j)) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
                  block g308
                    (varassign (arrayaccess (varuse ret2) (varuse i)) (arrayaccess (varuse ret) (binop minus (binop minus (varuse j) (literal (ptype int) 1)) (varuse i)))
                (return (classcreate (rtype (java lang String)) (varuse ret2)))
    method public (static) (rtype (java lang String)) (methoddecl valueOf (parameter (ptype short) i))
      block g313
        (return (methodcall (rtype (java lang String)) valueOf(#s((cast ast 1) #<envs> #s(ptype int) #s((varuse ast 1) #<envs> i)))))
    method public (static) (rtype (java lang String)) (methoddecl valueOf (parameter (ptype byte) i))
      block g314
        (return (methodcall (rtype (java lang String)) valueOf(#s((cast ast 1) #<envs> #s(ptype int) #s((varuse ast 1) #<envs> i)))))
    method public (static) (rtype (java lang String)) (methoddecl valueOf (parameter (ptype boolean) b))
      block g315
        iff (varuse b) (return (literal (rtype (java lang String)) true))(return (literal (rtype (java lang String)) false))
    method public (static) (rtype (java lang String)) (methoddecl valueOf (parameter (rtype (java lang Object)) o))
      block g316
        iff (binop eqeq (varuse o) (literal (ptype null) null)) (return (literal (rtype (java lang String)) null))(return (methodcall (varuse o) toStringempty))
    method public (static) (rtype (java lang String)) (methoddecl valueOf (parameter (rtype (java lang String)) o))
      block g317
        iff (binop eqeq (varuse o) (literal (ptype null) null)) (return (literal (rtype (java lang String)) null))(return (varuse o))
    method public empty (ptype boolean) (methoddecl equals (parameter (rtype (java lang Object)) o))
      block g318
        iff (binop eqeq (varuse o) (literal (ptype null) null)) (return (literal (ptype boolean) #f))empty
        iff (unop not (binop instanceof (varuse o) (rtype (java lang String)))) (return (literal (ptype boolean) #f))empty
        (return (methodcall (rtype (java util Arrays)) equals(#s((varuse ast 1) #<envs> chars) #s((fieldaccess ast 1) #<envs> #s((cast ast 1) #<envs> #s(rtype (java lang String)) #s((varuse ast 1) #<envs> o)) chars))))
    method public empty (rtype (java lang String)) (methoddecl substring (parameter (ptype int) i) (parameter (ptype int) j))
      block g319
        (varassign (vdecl empty empty (ptype int) k) (literal (ptype int) 0)
        block g321
          iff (binop lt (varuse i) (literal (ptype int) 0)) (return (literal (rtype (java lang String)) ))empty
          iff (binop gt (varuse j) (methodcall (this (rtype (java lang String))) lengthempty)) (return (literal (rtype (java lang String)) ))empty
          iff (binop lt (varuse j) (varuse i)) (return (literal (rtype (java lang String)) ))empty
          (varassign (vdecl empty empty (atype (ptype char)) ret) (arraycreate (ptype char) (binop minus (varuse j) (varuse i)))
          block g322
            for (varassign (varuse k) (varuse i) (binop lt (varuse k) (varuse j)) (varassign (varuse k) (binop plus (varuse k) (literal (ptype int) 1))
              block g320
                (varassign (arrayaccess (varuse ret) (binop minus (varuse k) (varuse i))) (methodcall (this (rtype (java lang String))) charAt(#s((varuse ast 1) #<envs> k)))
            (return (classcreate (rtype (java lang String)) (varuse ret)))
    method public empty (rtype (java lang String)) (methoddecl trim)
      block g323
        (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0)
        block g326
          (varassign (vdecl empty empty (ptype int) j) (literal (ptype int) 0)
          block g327
            for (varassign (varuse i) (literal (ptype int) 0) (binop ampamp (binop lt (varuse i) (methodcall (this (rtype (java lang String))) lengthempty)) (binop lteq (methodcall (this (rtype (java lang String))) charAt(#s((varuse ast 1) #<envs> i))) (literal (ptype char) 32))) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
              block g324
            for (varassign (varuse j) (binop minus (methodcall (this (rtype (java lang String))) lengthempty) (literal (ptype int) 1)) (binop ampamp (binop gteq (varuse j) (literal (ptype int) 0)) (binop lteq (methodcall (this (rtype (java lang String))) charAt(#s((varuse ast 1) #<envs> j))) (literal (ptype char) 32))) (varassign (varuse j) (binop minus (varuse j) (literal (ptype int) 1))
              block g325
            iff (binop gt (varuse i) (varuse j)) (return (literal (rtype (java lang String)) ))(return (methodcall (this (rtype (java lang String))) substring(#s((varuse ast 1) #<envs> i) #s((binop ast 1) #<envs> plus #s((varuse ast 1) #<envs> j) #s((literal ast 1) () #s(ptype int) 1)))))
    method public empty (ptype int) (methoddecl hashCode)
      block g328
        (varassign (vdecl empty empty (ptype int) h) (literal (ptype int) 0)
        block g330
          for (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0) (binop lt (varuse i) (fieldaccess (varuse chars) length)) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
            block g329
              (varassign (varuse h) (binop plus (binop star (literal (ptype int) 31) (varuse h)) (arrayaccess (varuse chars) (varuse i)))
          (return (varuse h))
    method public empty (rtype (java lang String)) (methoddecl toString)
      block g331
        (return (this (rtype (java lang String))))
    method public empty (ptype int) (methoddecl compareTo (parameter (rtype (java lang Object)) other))
      block g332
        (return (methodcall (this (rtype (java lang String))) compareTo(#s((cast ast 1) #<envs> #s(rtype (java lang String)) #s((varuse ast 1) #<envs> other)))))
    method public empty (ptype int) (methoddecl compareTo (parameter (rtype (java lang String)) other))
      block g333
        (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0)
        block g335
          (varassign (vdecl empty empty (ptype boolean) b) (literal (ptype boolean) #t)
          block g336
            while (varuse b)
              block g334
                iff (binop ampamp (binop gteq (varuse i) (fieldaccess (varuse chars) length)) (binop gteq (varuse i) (fieldaccess (fieldaccess (varuse other) chars) length))) (return (literal (ptype int) 0))empty
                iff (binop gteq (varuse i) (fieldaccess (varuse chars) length)) (return (literal (ptype int) -1))empty
                iff (binop gteq (varuse i) (fieldaccess (fieldaccess (varuse other) chars) length)) (return (literal (ptype int) 1))empty
                iff (binop lt (arrayaccess (varuse chars) (varuse i)) (arrayaccess (fieldaccess (varuse other) chars) (varuse i))) (return (literal (ptype int) -1))empty
                iff (binop gt (arrayaccess (varuse chars) (varuse i)) (arrayaccess (fieldaccess (varuse other) chars) (varuse i))) (return (literal (ptype int) 1))empty
                (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
            (return (literal (ptype int) 0))
    method public empty (atype (ptype char)) (methoddecl toCharArray)
      block g337
        (varassign (vdecl empty empty (atype (ptype char)) ret) (arraycreate (ptype char) (fieldaccess (varuse chars) length))
        block g339
          for (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0) (binop lt (varuse i) (fieldaccess (varuse ret) length)) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
            block g338
              (varassign (arrayaccess (varuse ret) (varuse i)) (arrayaccess (varuse chars) (varuse i))
          (return (varuse ret))
    method public empty (ptype int) (methoddecl indexOf (parameter (rtype (java lang String)) needle))
      block g340
        (varassign (vdecl empty empty (ptype int) offset) (literal (ptype int) 0)
        block g344
          (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0)
          block g345
            for (varassign (varuse offset) (literal (ptype int) 0) (binop lt (varuse offset) (methodcall (this (rtype (java lang String))) lengthempty)) (varassign (varuse offset) (binop plus (varuse offset) (literal (ptype int) 1))
              block g341
                (varassign (vdecl empty empty (ptype boolean) found) (literal (ptype boolean) #t)
                block g343
                  for (varassign (varuse i) (literal (ptype int) 0) (binop lt (varuse i) (methodcall (varuse needle) lengthempty)) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
                    block g342
                      iff (binop gteq (binop plus (varuse i) (varuse offset)) (methodcall (this (rtype (java lang String))) lengthempty)) (varassign (varuse found) (literal (ptype boolean) #f)iff (binop noteq (arrayaccess (varuse chars) (binop plus (varuse i) (varuse offset))) (arrayaccess (fieldaccess (varuse needle) chars) (varuse i))) (varassign (varuse found) (literal (ptype boolean) #f)empty
                  iff (varuse found) (return (varuse offset))empty
            (return (literal (ptype int) -1))c-unit
  (java lang)
  (pimport (java lang))
  (cimport (java io PrintStream))
  class public empty System empty empty
  block g346
    (varassign (vdecl public static (rtype (java io PrintStream)) out) (classcreate (rtype (java io PrintStream)))
    method public (static) (ptype void) (methoddecl gc)
      block g347
    constructor public (methoddecl System)
      block g348c-unit
  (java util)
  (pimport (java lang))
  class public empty Arrays empty empty
  block g349
    constructor public (methoddecl Arrays)
      block g350
    method public (static) (ptype boolean) (methoddecl equals (parameter (atype (ptype boolean)) a1) (parameter (atype (ptype boolean)) a2))
      block g351
        iff (binop noteq (fieldaccess (varuse a1) length) (fieldaccess (varuse a2) length)) (return (literal (ptype boolean) #f))empty
        for (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0) (binop lt (varuse i) (fieldaccess (varuse a1) length)) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
          block g352
            iff (binop noteq (arrayaccess (varuse a1) (varuse i)) (arrayaccess (varuse a2) (varuse i))) (return (literal (ptype boolean) #f))empty
        (return (literal (ptype boolean) #t))
    method public (static) (ptype boolean) (methoddecl equals (parameter (atype (ptype char)) a1) (parameter (atype (ptype char)) a2))
      block g353
        iff (binop noteq (fieldaccess (varuse a1) length) (fieldaccess (varuse a2) length)) (return (literal (ptype boolean) #f))empty
        for (varassign (vdecl empty empty (ptype int) i) (literal (ptype int) 0) (binop lt (varuse i) (fieldaccess (varuse a1) length)) (varassign (varuse i) (binop plus (varuse i) (literal (ptype int) 1))
          block g354
            iff (binop noteq (arrayaccess (varuse a1) (varuse i)) (arrayaccess (varuse a2) (varuse i))) (return (literal (ptype boolean) #f))empty
        (return (literal (ptype boolean) #t))

=========== Reachability ==========
########## CHECKING REACHABILITY FOR (Main) ############
########## CHECKING REACHABILITY FOR (CompA) ############
########## CHECKING REACHABILITY FOR (CompB) ############
########## CHECKING REACHABILITY FOR (CompC) ############
########## CHECKING REACHABILITY FOR (java lang Comparable) ############
########## CHECKING REACHABILITY FOR (java io OutputStream) ############
type-ast=? #s(ptype void) #s(ptype void)
type-ast=? #s(ptype void) #s(ptype void)
type-ast=? #s(ptype void) #s(ptype void)
########## CHECKING REACHABILITY FOR (java io PrintStream) ############
type-ast=? #s(ptype void) #s(ptype void)
type-ast=? #s(ptype void) #s(ptype void)
type-ast=? #s(ptype void) #s(ptype void)
type-ast=? #s(ptype void) #s(ptype void)
type-ast=? #s(ptype void) #s(ptype void)
type-ast=? #s(ptype void) #s(ptype void)
type-ast=? #s(ptype void) #s(ptype void)
type-ast=? #s(ptype void) #s(ptype void)
type-ast=? #s(ptype void) #s(ptype void)
type-ast=? #s(ptype void) #s(ptype void)
type-ast=? #s(ptype void) #s(ptype void)
type-ast=? #s(ptype void) #s(ptype void)
type-ast=? #s(ptype void) #s(ptype void)
type-ast=? #s(ptype void) #s(ptype void)
type-ast=? #s(ptype void) #s(ptype void)
########## CHECKING REACHABILITY FOR (java io Serializable) ############
########## CHECKING REACHABILITY FOR (java lang Boolean) ############
########## CHECKING REACHABILITY FOR (java lang Byte) ############
########## CHECKING REACHABILITY FOR (java lang Character) ############
########## CHECKING REACHABILITY FOR (java lang Class) ############
########## CHECKING REACHABILITY FOR (java lang Cloneable) ############
########## CHECKING REACHABILITY FOR (java lang Integer) ############
########## CHECKING REACHABILITY FOR (java lang Number) ############
########## CHECKING REACHABILITY FOR (java lang Object) ############
########## CHECKING REACHABILITY FOR (java lang Short) ############
########## CHECKING REACHABILITY FOR (java lang String) ############
########## CHECKING REACHABILITY FOR (java lang System) ############
type-ast=? #s(ptype void) #s(ptype void)
########## CHECKING REACHABILITY FOR (java util Arrays) ############


=========== Code Generation ==========
Types
(CompB, #s(rtype (CompB)))
(getClass(), #s(rtype (java lang Class)))
(clone(), #s(rtype (java lang Object)))
(hashCode(), #s(ptype int))
(toString(), #s(rtype (java lang String)))
(equals(#s(rtype (java lang Object))), #s(ptype boolean))
(compareTo(#s(rtype (java lang Object))), #s(ptype int))

Vars

Constructors
((), g155)

Methods
(getClass(), g275)
(clone(), g275)
(hashCode(), g275)
(toString(), g275)
(equals(#s(rtype (java lang Object))), g275)
(compareTo(#s(rtype (java lang Object))), g160)
(codeenv #15='("CompB") 1 #t 4 '("CompA") '() (list (codemeth '#s(funt "" ()) #t #f #f #15# 20 '#s((constructor ast 1) () public #s((methoddecl ast 1) () "CompB" ()) #s((block ast 1) #s(ptype void) g156 ()))) (codemeth '#s(funt "getClass" ()) #f #f #f #5='("java" "lang" "Object") 16 '#s((method ast 1) #1=#s(rtype ("java" "lang" "Class")) public (final) #1# #s((methoddecl ast 1) () "getClass" ()) #s((block ast 1) #s(ptype void) g281 (#s((return ast 1) #0=#s(ptype null) #s((literal ast 1) #0# #0# "null")))))) (codemeth '#s(funt "clone" ()) #f #f #f #5# 12 '#s((method ast 1) #4=#s(rtype #3=("java" "lang" "Object")) protected () #4# #s((methoddecl ast 1) () "clone" ()) #s((block ast 1) #s(ptype void) g280 (#s((return ast 1) #2=#s(rtype #3#) #s((this ast 1) #2# #2#)))))) (codemeth '#s(funt "hashCode" ()) #f #f #f #5# 8 '#s((method ast 1) #7=#s(ptype int) public () #7# #s((methoddecl ast 1) () "hashCode" ()) #s((block ast 1) #s(ptype void) g279 (#s((return ast 1) #6=#s(ptype int) #s((literal ast 1) #6# #6# 42)))))) (codemeth '#s(funt "toString" ()) #f #f #f #5# 4 '#s((method ast 1) #10=#s(rtype ("java" "lang" . #9=("String"))) public () #10# #s((methoddecl ast 1) () "toString" ()) #s((block ast 1) #s(ptype void) g278 (#s((return ast 1) #8=#s(rtype ("java" "lang" . #9#)) #s((literal ast 1) #8# #8# "Some random object")))))) (codemeth '#s(funt "equals" (#13=#s(rtype #3#))) #f #f #f #5# 0 '#s((method ast 1) #14=#s(ptype boolean) public () #14# #s((methoddecl ast 1) () "equals" (#s((parameter ast 1) () #13# "other"))) #s((block ast 1) #s(ptype void) g277 (#s((return ast 1) #12=#s(ptype boolean) #s((binop ast 1) #12# eqeq #s((this ast 1) #11=#s(rtype #3#) #11#) #s((varuse ast 1) #13# "other")))))))) '(1 2))
Compiled!
