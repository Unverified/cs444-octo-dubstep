public class J1_1_Cast_MultipleReferenceArray {
	public J1_1_Cast_MultipleReferenceArray() {}
	
	public static int test() {
		Object a = null;
		a = (Object)(int[])(Object)(Integer[])a;
		return 123;
	}
}\n====== Scanned Tokens ======
public : public
class : class
id : J1_1_Cast_MultipleReferenceArray
ocurl : {
public : public
id : J1_1_Cast_MultipleReferenceArray
oparen : (
cparen : )
ocurl : {
ccurl : }
public : public
static : static
int : int
id : test
oparen : (
cparen : )
ocurl : {
id : Object
id : a
eq : =
null-lit : null
semi : ;
id : a
eq : =
oparen : (
id : Object
cparen : )
oparen : (
int : int
osquare : [
csquare : ]
cparen : )
oparen : (
id : Object
cparen : )
oparen : (
id : Integer
osquare : [
csquare : ]
cparen : )
id : a
semi : ;
return : return
decimal-lit : 123
semi : ;
ccurl : }
ccurl : }
DONE PARSING
Node Stack:
leafnode | osquare : [
leafnode | id : Integer
leafnode | oparen : (
node | CASTS
  node | CASTS
    node | CASTS
      node | CAST
        leafnode | oparen : (
        node | COND_ARITH_EXP
          node | CP6
            node | CP5
              node | CP4
                node | CP3
                  node | CP2
                    node | CP2b
                      node | CP1
                        node | CP0
                          node | ARITH_EXP
                            node | ARITH_TERM
                              node | ARITH_FACTOR
                                node | IDS
                                  leafnode | id : Object
        leafnode | cparen : )
    node | CAST
      leafnode | oparen : (
      node | PRIMITIVE
        leafnode | int : int
      leafnode | osquare : [
      leafnode | csquare : ]
      leafnode | cparen : )
  node | CAST
    leafnode | oparen : (
    node | COND_ARITH_EXP
      node | CP6
        node | CP5
          node | CP4
            node | CP3
              node | CP2
                node | CP2b
                  node | CP1
                    node | CP0
                      node | ARITH_EXP
                        node | ARITH_TERM
                          node | ARITH_FACTOR
                            node | IDS
                              leafnode | id : Object
    leafnode | cparen : )
leafnode | eq : =
leafnode | id : a
node | STATEMENTS
  node | STATEMENT
    node | VAR_DEFINITION
      node | TYPE
        node | IDS
          leafnode | id : Object
      node | VAR_ASSIGNMENT
        leafnode | id : a
        leafnode | eq : =
        node | COND_ARITH_EXP
          node | CP6
            node | CP5
              node | CP4
                node | CP3
                  node | CP2
                    node | CP2b
                      node | CP1
                        node | CP0
                          node | ARITH_EXP
                            node | ARITH_TERM
                              node | ARITH_FACTOR
                                node | LITERAL
                                  leafnode | null-lit : null
    leafnode | semi : ;
leafnode | ocurl : {
leafnode | cparen : )
node | ARGUMENTS
leafnode | oparen : (
leafnode | id : test
node | TYPE
  node | PRIMITIVE
    leafnode | int : int
leafnode | static : static
node | SCOPE
  leafnode | public : public
node | DECLS
  node | DECL
    node | CONSTRUCTOR
      node | SCOPE
        leafnode | public : public
      node | FUNC_BODY
        leafnode | id : J1_1_Cast_MultipleReferenceArray
        leafnode | oparen : (
        node | ARGUMENTS
        leafnode | cparen : )
        node | BLOCK
          leafnode | ocurl : {
          node | BLOCK_BODY
          leafnode | ccurl : }
leafnode | ocurl : {
node | CLASS_ADDITION
leafnode | id : J1_1_Cast_MultipleReferenceArray
leafnode | class : class
node | CMOD
leafnode | public : public
node | IMPORTS
node | PACKAGE
leafnode | BOF : BOF
Error
